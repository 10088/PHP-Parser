<?php

/* Prototype file of an object oriented PHP parser.
 * Written by Moriyoshi Koizumi, based on the work by Masato Bito.
 * This file is PUBLIC DOMAIN.
 */
class PHPParser_Parser
{
    const YYBADCH      = 149;
    const YYMAXLEX     = 384;
    const YYTERMS      = 149;
    const YYNONTERMS   = 95;
    const YYLAST       = 939;
    const YY2TBLSTATE  = 335;
    const YYGLAST      = 370;
    const YYSTATES     = 778;
    const YYNLSTATES   = 546;
    const YYINTERRTOK  = 1;
    const YYUNEXPECTED = 32767;
    const YYDEFAULT    = -32766;

    // {{{ Tokens
    const YYERRTOK = 256;
    const T_INCLUDE = 257;
    const T_INCLUDE_ONCE = 258;
    const T_EVAL = 259;
    const T_REQUIRE = 260;
    const T_REQUIRE_ONCE = 261;
    const T_LOGICAL_OR = 262;
    const T_LOGICAL_XOR = 263;
    const T_LOGICAL_AND = 264;
    const T_PRINT = 265;
    const T_PLUS_EQUAL = 266;
    const T_MINUS_EQUAL = 267;
    const T_MUL_EQUAL = 268;
    const T_DIV_EQUAL = 269;
    const T_CONCAT_EQUAL = 270;
    const T_MOD_EQUAL = 271;
    const T_AND_EQUAL = 272;
    const T_OR_EQUAL = 273;
    const T_XOR_EQUAL = 274;
    const T_SL_EQUAL = 275;
    const T_SR_EQUAL = 276;
    const T_BOOLEAN_OR = 277;
    const T_BOOLEAN_AND = 278;
    const T_IS_EQUAL = 279;
    const T_IS_NOT_EQUAL = 280;
    const T_IS_IDENTICAL = 281;
    const T_IS_NOT_IDENTICAL = 282;
    const T_IS_SMALLER_OR_EQUAL = 283;
    const T_IS_GREATER_OR_EQUAL = 284;
    const T_SL = 285;
    const T_SR = 286;
    const T_INSTANCEOF = 287;
    const T_INC = 288;
    const T_DEC = 289;
    const T_INT_CAST = 290;
    const T_DOUBLE_CAST = 291;
    const T_STRING_CAST = 292;
    const T_ARRAY_CAST = 293;
    const T_OBJECT_CAST = 294;
    const T_BOOL_CAST = 295;
    const T_UNSET_CAST = 296;
    const T_NEW = 297;
    const T_CLONE = 298;
    const T_EXIT = 299;
    const T_IF = 300;
    const T_ELSEIF = 301;
    const T_ELSE = 302;
    const T_ENDIF = 303;
    const T_LNUMBER = 304;
    const T_DNUMBER = 305;
    const T_STRING = 306;
    const T_STRING_VARNAME = 307;
    const T_VARIABLE = 308;
    const T_NUM_STRING = 309;
    const T_INLINE_HTML = 310;
    const T_CHARACTER = 311;
    const T_BAD_CHARACTER = 312;
    const T_ENCAPSED_AND_WHITESPACE = 313;
    const T_CONSTANT_ENCAPSED_STRING = 314;
    const T_ECHO = 315;
    const T_DO = 316;
    const T_WHILE = 317;
    const T_ENDWHILE = 318;
    const T_FOR = 319;
    const T_ENDFOR = 320;
    const T_FOREACH = 321;
    const T_ENDFOREACH = 322;
    const T_DECLARE = 323;
    const T_ENDDECLARE = 324;
    const T_AS = 325;
    const T_SWITCH = 326;
    const T_ENDSWITCH = 327;
    const T_CASE = 328;
    const T_DEFAULT = 329;
    const T_BREAK = 330;
    const T_CONTINUE = 331;
    const T_GOTO = 332;
    const T_FUNCTION = 333;
    const T_CONST = 334;
    const T_RETURN = 335;
    const T_TRY = 336;
    const T_CATCH = 337;
    const T_THROW = 338;
    const T_USE = 339;
    const T_INSTEADOF = 340;
    const T_GLOBAL = 341;
    const T_STATIC = 342;
    const T_ABSTRACT = 343;
    const T_FINAL = 344;
    const T_PRIVATE = 345;
    const T_PROTECTED = 346;
    const T_PUBLIC = 347;
    const T_VAR = 348;
    const T_UNSET = 349;
    const T_ISSET = 350;
    const T_EMPTY = 351;
    const T_HALT_COMPILER = 352;
    const T_CLASS = 353;
    const T_TRAIT = 354;
    const T_INTERFACE = 355;
    const T_EXTENDS = 356;
    const T_IMPLEMENTS = 357;
    const T_OBJECT_OPERATOR = 358;
    const T_DOUBLE_ARROW = 359;
    const T_LIST = 360;
    const T_ARRAY = 361;
    const T_CALLABLE = 362;
    const T_CLASS_C = 363;
    const T_TRAIT_C = 364;
    const T_METHOD_C = 365;
    const T_FUNC_C = 366;
    const T_LINE = 367;
    const T_FILE = 368;
    const T_COMMENT = 369;
    const T_DOC_COMMENT = 370;
    const T_OPEN_TAG = 371;
    const T_OPEN_TAG_WITH_ECHO = 372;
    const T_CLOSE_TAG = 373;
    const T_WHITESPACE = 374;
    const T_START_HEREDOC = 375;
    const T_END_HEREDOC = 376;
    const T_DOLLAR_OPEN_CURLY_BRACES = 377;
    const T_CURLY_OPEN = 378;
    const T_PAAMAYIM_NEKUDOTAYIM = 379;
    const T_NAMESPACE = 380;
    const T_NS_C = 381;
    const T_DIR = 382;
    const T_NS_SEPARATOR = 383;
    // }}}

    protected static $yyterminals = array(
        "EOF",
        "error",
        "T_INCLUDE",
        "T_INCLUDE_ONCE",
        "T_EVAL",
        "T_REQUIRE",
        "T_REQUIRE_ONCE",
        "','",
        "T_LOGICAL_OR",
        "T_LOGICAL_XOR",
        "T_LOGICAL_AND",
        "T_PRINT",
        "'='",
        "T_PLUS_EQUAL",
        "T_MINUS_EQUAL",
        "T_MUL_EQUAL",
        "T_DIV_EQUAL",
        "T_CONCAT_EQUAL",
        "T_MOD_EQUAL",
        "T_AND_EQUAL",
        "T_OR_EQUAL",
        "T_XOR_EQUAL",
        "T_SL_EQUAL",
        "T_SR_EQUAL",
        "'?'",
        "':'",
        "T_BOOLEAN_OR",
        "T_BOOLEAN_AND",
        "'|'",
        "'^'",
        "'&'",
        "T_IS_EQUAL",
        "T_IS_NOT_EQUAL",
        "T_IS_IDENTICAL",
        "T_IS_NOT_IDENTICAL",
        "'<'",
        "T_IS_SMALLER_OR_EQUAL",
        "'>'",
        "T_IS_GREATER_OR_EQUAL",
        "T_SL",
        "T_SR",
        "'+'",
        "'-'",
        "'.'",
        "'*'",
        "'/'",
        "'%'",
        "'!'",
        "T_INSTANCEOF",
        "'~'",
        "T_INC",
        "T_DEC",
        "T_INT_CAST",
        "T_DOUBLE_CAST",
        "T_STRING_CAST",
        "T_ARRAY_CAST",
        "T_OBJECT_CAST",
        "T_BOOL_CAST",
        "T_UNSET_CAST",
        "'@'",
        "'['",
        "T_NEW",
        "T_CLONE",
        "T_EXIT",
        "T_IF",
        "T_ELSEIF",
        "T_ELSE",
        "T_ENDIF",
        "T_LNUMBER",
        "T_DNUMBER",
        "T_STRING",
        "T_STRING_VARNAME",
        "T_VARIABLE",
        "T_NUM_STRING",
        "T_INLINE_HTML",
        "T_ENCAPSED_AND_WHITESPACE",
        "T_CONSTANT_ENCAPSED_STRING",
        "T_ECHO",
        "T_DO",
        "T_WHILE",
        "T_ENDWHILE",
        "T_FOR",
        "T_ENDFOR",
        "T_FOREACH",
        "T_ENDFOREACH",
        "T_DECLARE",
        "T_ENDDECLARE",
        "T_AS",
        "T_SWITCH",
        "T_ENDSWITCH",
        "T_CASE",
        "T_DEFAULT",
        "T_BREAK",
        "T_CONTINUE",
        "T_GOTO",
        "T_FUNCTION",
        "T_CONST",
        "T_RETURN",
        "T_TRY",
        "T_CATCH",
        "T_THROW",
        "T_USE",
        "T_INSTEADOF",
        "T_GLOBAL",
        "T_STATIC",
        "T_ABSTRACT",
        "T_FINAL",
        "T_PRIVATE",
        "T_PROTECTED",
        "T_PUBLIC",
        "T_VAR",
        "T_UNSET",
        "T_ISSET",
        "T_EMPTY",
        "T_HALT_COMPILER",
        "T_CLASS",
        "T_TRAIT",
        "T_INTERFACE",
        "T_EXTENDS",
        "T_IMPLEMENTS",
        "T_OBJECT_OPERATOR",
        "T_DOUBLE_ARROW",
        "T_LIST",
        "T_ARRAY",
        "T_CALLABLE",
        "T_CLASS_C",
        "T_TRAIT_C",
        "T_METHOD_C",
        "T_FUNC_C",
        "T_LINE",
        "T_FILE",
        "T_START_HEREDOC",
        "T_END_HEREDOC",
        "T_DOLLAR_OPEN_CURLY_BRACES",
        "T_CURLY_OPEN",
        "T_PAAMAYIM_NEKUDOTAYIM",
        "T_NAMESPACE",
        "T_NS_C",
        "T_DIR",
        "T_NS_SEPARATOR",
        "';'",
        "'{'",
        "'}'",
        "'('",
        "')'",
        "'$'",
        "']'",
        "'`'",
        "'\"'"
        , "???"
    );

    protected static $yytranslate = array(
            0,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,   47,  148,  149,  145,   46,   30,  149,
          143,  144,   44,   41,    7,   42,   43,   45,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,   25,  140,
           35,   12,   37,   24,   59,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,   60,  149,  146,   29,  149,  147,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  141,   28,  142,   49,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,    1,    2,    3,    4,
            5,    6,    8,    9,   10,   11,   13,   14,   15,   16,
           17,   18,   19,   20,   21,   22,   23,   26,   27,   31,
           32,   33,   34,   36,   38,   39,   40,   48,   50,   51,
           52,   53,   54,   55,   56,   57,   58,   61,   62,   63,
           64,   65,   66,   67,   68,   69,   70,   71,   72,   73,
           74,  149,  149,   75,   76,   77,   78,   79,   80,   81,
           82,   83,   84,   85,   86,   87,   88,   89,   90,   91,
           92,   93,   94,   95,   96,   97,   98,   99,  100,  101,
          102,  103,  104,  105,  106,  107,  108,  109,  110,  111,
          112,  113,  114,  115,  116,  117,  118,  119,  120,  121,
          122,  123,  124,  125,  126,  127,  128,  129,  130,  149,
          149,  149,  149,  149,  149,  131,  132,  133,  134,  135,
          136,  137,  138,  139
    );

    protected static $yyaction = array(
           58,   59,  368,   60,   61,-32766,-32766,-32766,  900,   62,
        -32767,-32767,-32767,-32767,  100,  101,  102,  103,  104,-32766,
        -32766,-32766,-32766,-32766,-32766,   47,  108,  109,  110,  111,
          112,  113,  114,  115,  116,  117,  118,  468,  315,   63,
           64,  661,  662,  435,    0,   65,  550,   66,  238,  239,
           67,   68,   69,   70,   71,   72,   73,   74,   30,  240,
           75,  340,  369,  735,  737,  850,  827,  828,  370,  900,
          879,  350,  592,  523,  829,   53,   27,  371,  300,  372,
          803,  373,  910,  374,  912,  911,  375,-32766,-32766,-32766,
           41,   42,  376,  343,  839,   43,  377,  341,   76,   45,
          243,  297,  299,-32766,  298,-32766,  249,  378,  379,  380,
          381,  382,  393,  197,  127,  342,  575,  615,  383,  384,
          385,  386,  879,  833,  834,  835,  836,  830,  831,  257,
          641,   84,   85,   86,  393,  837,  832,  342,  599,  521,
          125,   77,  849,  277,  576,  261,  265,   46,  879,   87,
           88,   89,   90,   91,   92,   93,   94,   95,   96,   97,
           98,   99,  100,  101,  102,  103,  104,  105,  106,  107,
          366,  244,  424,  105,  106,  107,  230,  244,  266,-32766,
          510,-32766,-32766,-32766,  495,  550,-32766,-32766,-32766,-32766,
           55,   57,-32766,-32766,-32766,  277,-32766,-32766,-32766,  445,
        -32766,   56,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
        -32766,  589,-32766,-32766,-32766,-32766,  550,  421,-32766,  392,
        -32766,  277,-32766,-32766,-32766,-32766,-32766,-32766,  355,-32766,
          246,-32766,   54,  879,-32766,  839,  248,  559,-32766,-32766,
        -32766,  661,  662,-32766,-32766,  642,-32766,  879,  129,-32766,
          392,  263,  685,  338,  879,-32766,-32766,-32766,  275,  873,
          123,  241, -108,  520,-32766,  131,  671,  698,  362,  460,
          550,  120,  122,   35,-32766,  338,  442,-32766,-32766,-32766,
          275,-32766,  121,-32766,-32766,-32766,-32766,-32766,-32766,  698,
          883,   22,-32766,-32766,-32766,-32766,   49,-32766,-32766,  613,
        -32766,  550,  124,-32766,  392,-32766,  277,  795,-32766,-32766,
        -32766,-32766,-32766,  119,-32766,  250,-32766,  680,   40,-32766,
          277,  614,  198,-32766,-32766,-32766,  352,  277,-32766,-32766,
          907,-32766,  285,  690,-32766,  392,   21,  256,  338,  229,
        -32766,-32766,-32766,  275,  356,  279,  245,  127,  247,-32766,
          590,  284,  698,  498,  499,  550,-32766,-32766,-32766,-32766,
          228,  126,-32766,-32766,-32766,  130,-32766,  199,-32766,  200,
        -32766,-32766,-32766,-32766,  102,  103,  104,-32766,-32766,-32766,
        -32766,  132,-32766,-32766,  612,-32766,  550,  203,-32766,  392,
        -32766,  487,   28,-32766,-32766,-32766,-32766,-32766,  209,-32766,
          204,-32766,  207,  490,-32766,  133,  304,  208,-32766,-32766,
        -32766,  427,  341,-32766,-32766,  206,-32766,  556,  525,-32766,
          392,  534,  378,  379,  541,-32766,-32766,-32766,  244,  603,
        -32766,  575,  615,  383,  384,  544,  550,  684,  537,  540,
        -32766,  695,  545,-32766,-32766,-32766,  530,-32766,  529,-32766,
          527,-32766,  610,  463,-32766,  506,-32766,-32766,-32766,-32766,
        -32766,-32766,  550,-32766,-32766,  452,-32766,  550,  324,-32766,
          392,-32766,  507,  505,-32766,-32766,-32766,-32766,-32766,  551,
        -32766,  564,-32766,  417,  504,-32766,  416,  905,  566,-32766,
        -32766,-32766,  797,  341,-32766,-32766,  407,-32766,  405,  404,
        -32766,  392,  351,  378,  379,  349,-32766,-32766,-32766,  842,
          820,-32766,  575,  615,  383,  384,  692,  550,  519,  900,
          283,-32766,  796,  503,-32766,-32766,-32766,  484,-32766,  482,
        -32766,  406,-32766, -151,  480,-32766,  418,-32766,-32766,-32766,
        -32766,-32766,-32766,  282,-32766,-32766,  413,-32766,  550,  231,
        -32766,  392,-32766,  451,  501,-32766,-32766,-32766,-32766,-32766,
         -148,-32766,  233,-32766,  365,  491,-32766,  348,-32766,  470,
        -32766,-32766,-32766,  276,  273,-32766,-32766,  274,-32766,  410,
          264,-32766,  392,  262,  838,  635,  771,-32766,-32766,-32766,
            0,    0,-32766,  347,  616,  617,   37,    0,  550,  278,
            0,    0,-32766,   48,  205,-32766,-32766,-32766,    0,-32766,
            0,-32766,  317,-32766,  591,    0,-32766,    0,  583,-32766,
        -32766,-32766,-32766,-32766,  269,-32766,-32766, -267,-32766,  550,
         -258,-32766,  392,-32766, -266,  469,-32766,-32766,-32766,-32766,
        -32766,  515,-32766,  268,-32766,  201,  202,-32766,  350,  909,
          688,-32766,-32766,-32766,  681,  560,-32766,-32766,  593,-32766,
          689,  691,-32766,  392,  195,-32766,-32766,-32766,  585,-32766,
        -32766,  627,  827,  828,  706,  707,  708,  705,  704,  703,
          829,-32766,  629,-32766,-32766,-32766,-32766,-32766,-32767,-32767,
        -32767,-32767,  578,  637,  636,  631,  341,  336,  644,  587,
        -32766,  580,  296,  341,  336,  594,  378,  379,  602,  296,
          531,  533,  532,  378,  379,  555,  615,  383,  384,   52,
           51,  584,  555,  615,  383,  384,  586,  448,  588,  833,
          834,  835,  836,  830,  831,  326,  601,  281,  341,  526,
          524,  837,  832,  558,  281,  341,  336,  522,  378,  379,
          557,  296,-32766,-32766,-32766,  378,  379,  575,  615,  383,
          384,   83,  535,  536,  555,  615,  383,  384,-32766,  341,
        -32766,-32766,-32766,-32766,-32766,  539,  543,  453,  908,  378,
          379,  874,  341,  884,  673,  337,  281,  341,  575,  615,
          383,  384,  378,  379,  477,  906,  880,  378,  379,   36,
          341,  575,  615,  383,  384,  878,  575,  615,  383,  384,
          378,  379,  866,  876,  818,  488,  793,  341,  634,  575,
          615,  383,  384,   39,   44,   50,   78,  378,  379,  792,
          341,   34,   79,  518,  611,  889,  575,  615,  383,  384,
          378,  379,-32766,-32766,-32766,   80,  341,  696,  508,  575,
          615,  383,  384,  346,  339,  280,  378,  379,-32766,  341,
        -32766,-32766,-32766,-32766,  606,  575,  615,  383,  384,  378,
          379,  255,  254,   81,  253,   32,   82,  128,  575,  615,
          383,  384,  134,  252,  242,  237,   33,    0,  236,  227,
           38,   31,  226,  196,    0,  135,    0,  772,   25,   23,
           24,   20,   26,   29,  821,  775,  768,  517,    0,  478,
          455,  301,  800,  845,  799,  863,  826,  864,  802,  801,
          798,  788,  509,  479,  364,  357,  305,    0,    0,  485,
          846,  904,  817,  875,  865,  877,  789,    0,  790
    );

    protected static $yycheck = array(
            2,    3,    4,    5,    6,    8,    9,   10,   75,   11,
           35,   36,   37,   38,   39,   40,   41,   42,   43,    8,
            9,   24,  104,   26,   27,   12,   13,   14,   15,   16,
           17,   18,   19,   20,   21,   22,   23,   75,   72,   41,
           42,  123,  124,   70,    0,   47,   70,   49,   50,   51,
           52,   53,   54,   55,   56,   57,   58,   59,   60,   61,
           62,   63,   64,   50,   51,  132,   68,   69,   70,   75,
           72,  139,   74,  141,   76,   77,   78,   79,    7,   81,
          104,   83,   70,   85,   72,   73,   88,    8,    9,   10,
           92,   93,   94,   95,  132,   97,   98,   95,  100,  133,
          134,  103,  104,   24,    7,   26,   30,  105,  106,  111,
          112,  113,  136,    7,  141,  139,  114,  115,  116,  117,
          122,  123,   72,  125,  126,  127,  128,  129,  130,  131,
           25,    8,    9,   10,  136,  137,  138,  139,  140,  141,
           25,  143,  148,  145,  142,  147,  148,   24,   72,   26,
           27,   28,   29,   30,   31,   32,   33,   34,   35,   36,
           37,   38,   39,   40,   41,   42,   43,   44,   45,   46,
            7,   48,  122,   44,   45,   46,   30,   48,   75,   64,
           70,    8,    9,   10,    7,   70,    8,    9,   10,   74,
           60,   60,   77,   78,   79,  145,   81,   24,   83,    7,
           85,   60,   24,   88,   26,   27,   28,   92,   93,   94,
           64,  140,   97,   98,  104,  100,   70,    7,  103,  104,
           74,  145,  104,   77,   78,   79,  111,   81,   25,   83,
           30,   85,   60,   72,   88,  132,   61,  140,   92,   93,
           94,  123,  124,   97,   98,  140,  100,   72,   60,  103,
          104,  120,  142,   96,   72,  140,  141,  111,  101,   72,
            7,   30,  144,   70,   64,  141,   72,  110,  121,  145,
           70,  141,  141,  143,   74,   96,   70,   77,   78,   79,
          101,   81,  141,   83,    8,   85,  140,  141,   88,  110,
           70,  144,   92,   93,   94,   64,    7,   97,   98,  142,
          100,   70,  141,  103,  104,   74,  145,  144,   77,   78,
           79,  111,   81,  141,   83,   30,   85,  140,    7,   88,
          145,  142,   12,   92,   93,   94,    7,  145,   97,   98,
          142,  100,  145,  140,  103,  104,  144,    7,   96,  145,
          140,  141,  111,  101,  141,    7,   30,  141,    7,   64,
          140,   60,  110,   65,   66,   70,    8,    9,   10,   74,
            7,  141,   77,   78,   79,   25,   81,   12,   83,   12,
           85,  140,  141,   88,   41,   42,   43,   92,   93,   94,
           64,   12,   97,   98,  142,  100,   70,   12,  103,  104,
           74,   65,   66,   77,   78,   79,  111,   81,   12,   83,
           12,   85,   12,   86,   88,   90,   91,   12,   92,   93,
           94,  120,   95,   97,   98,   12,  100,  140,  141,  103,
          104,   25,  105,  106,   25,  140,  141,  111,   48,   25,
           64,  114,  115,  116,  117,   25,   70,  140,  141,   25,
           74,  140,  141,   77,   78,   79,   25,   81,   25,   83,
           25,   85,   30,   70,   88,   70,  140,  141,   92,   93,
           94,   64,   70,   97,   98,   72,  100,   70,   71,  103,
          104,   74,   67,   72,   77,   78,   79,  111,   81,   70,
           83,   70,   85,   70,   72,   88,   70,   70,   70,   92,
           93,   94,   72,   95,   97,   98,   70,  100,   70,   70,
          103,  104,   70,  105,  106,   70,  140,  141,  111,   70,
          144,   64,  114,  115,  116,  117,   70,   70,   70,   75,
           75,   74,   72,   72,   77,   78,   79,   72,   81,   72,
           83,   72,   85,   72,  101,   88,   87,  140,  141,   92,
           93,   94,   64,   75,   97,   98,   79,  100,   70,   87,
          103,  104,   74,   87,   89,   77,   78,   79,  111,   81,
           87,   83,   87,   85,   95,   89,   88,   95,  104,   99,
           92,   93,   94,  102,  118,   97,   98,  119,  100,  139,
          120,  103,  104,  120,  132,  142,  144,  140,  141,  111,
           -1,   -1,   64,  139,  115,  115,  143,   -1,   70,  118,
           -1,   -1,   74,  121,  121,   77,   78,   79,   -1,   81,
           -1,   83,  135,   85,  140,   -1,   88,   -1,  140,  141,
           92,   93,   94,   64,  135,   97,   98,  135,  100,   70,
          135,  103,  104,   74,  135,  135,   77,   78,   79,  111,
           81,  135,   83,  135,   85,   41,   42,   88,  139,  142,
          140,   92,   93,   94,  140,  140,   97,   98,  140,  100,
          140,  140,  103,  104,   60,    8,    9,   10,  140,  141,
          111,  140,   68,   69,  104,  105,  106,  107,  108,  109,
           76,   24,  140,   26,   27,   28,   29,   30,   31,   32,
           33,   34,  140,  140,  140,  140,   95,   96,  140,  140,
          141,  140,  101,   95,   96,  140,  105,  106,  140,  101,
          141,  140,  140,  105,  106,  114,  115,  116,  117,  140,
          140,  140,  114,  115,  116,  117,  140,  123,  140,  125,
          126,  127,  128,  129,  130,  131,  140,  136,   95,  141,
          141,  137,  138,  142,  136,   95,   96,  141,  105,  106,
          142,  101,    8,    9,   10,  105,  106,  114,  115,  116,
          117,  141,  141,  141,  114,  115,  116,  117,   24,   95,
           26,   27,   28,   29,   30,  141,  141,  144,  142,  105,
          106,  142,   95,  142,  142,  142,  136,   95,  114,  115,
          116,  117,  105,  106,  142,  142,  142,  105,  106,  143,
           95,  114,  115,  116,  117,  142,  114,  115,  116,  117,
          105,  106,  142,  142,  142,   80,  142,   95,  142,  114,
          115,  116,  117,  143,  143,  143,  143,  105,  106,  142,
           95,  143,  143,   82,  142,  144,  114,  115,  116,  117,
          105,  106,    8,    9,   10,  143,   95,  142,   84,  114,
          115,  116,  117,  143,  143,  143,  105,  106,   24,   95,
           26,   27,   28,   29,  142,  114,  115,  116,  117,  105,
          106,  143,  143,  143,  143,  143,  143,  143,  114,  115,
          116,  117,  143,  143,  143,  143,  143,   -1,  143,  143,
          143,  143,  143,  143,   -1,  143,   -1,  144,  144,  144,
          144,  144,  144,  144,  144,  144,  144,  144,   -1,  144,
          144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
          144,  144,  144,  144,  144,  144,  144,   -1,   -1,  146,
          146,  146,  146,  146,  146,  146,  146,   -1,  147
    );

    protected static $yybase = array(
            0,  601,  608,  650,    2,  643,  735,  317,  764,  692,
          687,  674,  751,  722,  705,  398,  398,  398,  398,  398,
          423,  421,  396,  396,  399,  396,  425,   -2,   -2,   -2,
          231,  231,  316,  316,  316,  316,  316,  316,  316,  316,
          231,  478,  528,  559,  366,  397,  115,  146,  200,  285,
          447,  447,  447,  447,  447,  447,  447,  447,  447,  447,
          447,  447,  447,  447,  447,  447,  447,  447,  447,  447,
          447,  447,  447,  447,  447,  447,  447,  447,  447,  447,
          447,  447,  447,  447,  447,  447,  447,  447,  447,  447,
          447,  447,  447,  447,  447,  447,  447,  447,  447,  447,
          447,  447,  447,  447,  447,  447,  447,  447,  447,  447,
          447,  447,  447,  447,  447,  447,  447,  447,  447,  447,
          447,  447,  447,  447,  447,  447,  447,  447,  447,  447,
          447,  447,  447,  447,  447,  447,  105,  518,  482,  581,
          586,  588,  596,  762,  761,  760,  758,  757,  462,  767,
          653,  654,  340,  663,  670,  671,  672,  642,  641,  652,
          765,  783,  639,  759,  763,  123,  123,  123,  123,  123,
          123,  123,  123,  123,  123,  276,   11,  348,  348,  348,
          348,  348,  348,  348,  348,  348,  348,  348,  348,  348,
          348,  348,  173,  173,   79,  604,  604,  604,  604,  604,
          604,  604,  604,  604,  604,  604,  604,  604,  604,  604,
           -3,  178,  834,  744,  657,  657,  657,  657,   13,  -25,
          -25,  -25,  -25,  179,  157,  242,   50,   50,   50,  161,
          175,   76,  461,  448,  333,  333,  182,  182,  182,  182,
          182,  182,  182,  182,  182,  182,  182,  182,  182,  182,
          182,  182,  118,  118,  118,  118,  -82,  103,  -67,   -6,
          110,  468,  220,  220,  220,  445,  452,  444,  -27,  206,
          129,  129,  129,  464,  464,  464,  464,  620,  464,  464,
          464,  -68,  -34,  -34,   12,  124,  297,  492,  130,  131,
          277,  147,  476,  676,  465,  443,  454,  194,  454,  459,
          194,  203,  326,  288,  105,  301,  495,  141,  474,  413,
          515,  449,   97,   71,  210,  291,  172,  187,  192,  466,
          633,  442,  753,  766,  188,  507,  -38,  172,  691,  755,
          514,  177,  754,  163,  510,  193,  428,  470,  428,  422,
          681,  422,  392,  422,  311,  656,  416,  392,  422,  456,
          392,  481,  428,  458,  422,  572,  571,  433,  106,  470,
          455,  656,  422,  422,  433,  422,  422,   44,  683,  689,
          404,  702,  682,  730,  710,  733,  429,  606,  479,  480,
          745,  742,  741,  426,  435,  749,  748,  440,  432,  508,
          743,  688,  472,  509,  380,  463,  732,  489,  463,  790,
          477,  499,  460,  467,  568,  310,  355,  599,  440,  791,
          409,  740,  463,  734,  580,  253,  357,  731,  411,  463,
          729,  393,  463,  598,  746,  463,  777,  417,  440,  380,
          380,  380,  453,  776,  289,  747,  775,  774,  789,  788,
          773,  787,  747,  772,  786,  383,  781,  330,  750,  495,
          500,  418,  375,  565,  338,  369,  785,  463,  463,  569,
          620,  463,  579,  388,  779,  457,  483,  784,  452,  439,
          712,  780,  463,  469,  771,  338,  770,  680,  561,  621,
          711,  622,  403,  769,  390,  636,  463,  739,  558,  756,
          555,  554,  451,  412,  634,  401,  385,  768,  752,  414,
          405,  553,  420,  395,  778,  386,  728,  552,  542,  635,
          473,  506,  471,  475,  450,  446,  782,  410,  531,  521,
          520,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,    0,    0,    0,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,  123,  123,  123,  123,  123,  123,  123,  123,
          123,  123,  123,  123,  123,  123,  123,  123,  123,  123,
          123,  123,  123,  123,  123,  123,  123,  123,  123,  123,
          123,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,  123,  123,  123,  123,  123,  123,  123,  123,  123,
          123,  123,  123,  123,  123,  123,  123,  123,  123,  123,
          123,  -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,
          -24,  -24,  -24,  -24,  -24,  -24,  123,  123,  123,  123,
          123,  123,  123,  123,  463,  129,  129,  129,  129,  570,
          570,  570,  -24,  -24,  -24,  -24,  -24,  -24,  570,  570,
          129,  129,  -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,
          -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,
          -24,  -24,  -24,  -34,  -34,  -34,  -24,  -34,  182,  182,
          182,  -34,  -34,  -34,  187,  187,    0,    0,    0,  -24,
          -24,  -24,  -24,  182,  -24,  -24,  -24,  392,    0,    0,
            0,  182,  338,  172,    0,    0,  440,  463,  315,  315,
          315,  315,  392,    0,  392,  472,    0,    0,    0,    0,
            0,    0,  732,    0,  253,  740,  319,  440,    0,    0,
            0,    0,    0,    0,    0,  440,  341,  341,  463,  353,
            0,  463,    0,    0,  353,  463,  319,    0,  463,    0,
          338
    );

    protected static $yydefault = array(
            3,32767,32767,    1,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,  101,   94,  106,   93,  102,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
          345,  345,  118,  118,  118,  118,  118,  118,  118,  118,
          308,32767,32767,32767,32767,32767,32767,32767,32767,32767,
          169,  169,  169,32767,  335,  335,  335,  335,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,  350,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,  227,  228,  230,  231,  168,
          119,  336,  349,  167,  121,  195,  197,  245,  196,  173,
          178,  179,  180,  181,  182,  183,  184,  185,  186,  187,
          188,  172,  224,  223,  193,  305,  305,  308,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
          194,  198,  200,  199,  215,  216,  213,  214,  171,  217,
          218,  219,  220,  153,  153,  153,  344,  344,  344,32767,
        32767,32767,  154,32767,  207,  208,32767,32767,32767,32767,
          268,32767,32767,32767,  268,32767,32767,32767,  268,32767,
        32767,32767,  113,  113,  113,  113,  113,32767,32767,32767,
        32767,  276,32767,32767,32767,32767,32767,  278,32767,32767,
          202,  203,  201,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,  277,32767,32767,32767,32767,  321,  313,  264,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,  257,
        32767,32767,  103,  105,32767,32767,  294,  326,32767,32767,
        32767,   17,32767,32767,32767,  357,  321,32767,32767,   19,
        32767,32767,32767,32767,32767,32767,32767,  325,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,   63,
          273,   63,32767,   63,  307,  279,32767,32767,   63,   74,
        32767,   72,32767,   76,   63,   92,   92,  248,  307,   54,
        32767,  279,   63,   63,  248,   63,   63,32767,32767,32767,
            4,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,  259,32767,32767,
          324,  323,  257,32767,  211,  190,  258,32767,  192,32767,
        32767,  262,  265,32767,32767,32767,  130,32767,  260,32767,
        32767,32767,  352,32767,32767,  170,32767,32767,32767,  126,
        32767,32767,   61,32767,32767,  342,32767,32767,  261,  204,
          205,  206,  316,32767,  117,  302,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,  107,32767,  294,
        32767,32767,  128,32767,   75,32767,32767,  174,  120,32767,
        32767,  351,32767,32767,32767,32767,  312,32767,32767,32767,
        32767,32767,   62,32767,32767,   77,32767,32767,32767,32767,
        32767,32767,  109,32767,  165,32767,  122,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,  111,32767,  163,32767,32767,32767,32767,
            4,32767,  147,32767,32767,32767,32767,32767,32767,32767,
        32767,   25,   25,    3,  133,    3,  133,   25,   99,   25,
           25,  133,   92,   92,   25,   25,   25,  140,   25,   25,
           25,   25,   25,   25,   25,   25
    );

    protected static $yygoto = array(
          138,  138,  170,  170,  170,  170,  170,  170,  170,  170,
          138,  139,  140,  141,  145,  150,  152,  179,  172,  174,
          169,  169,  169,  169,  171,  171,  171,  171,  165,  166,
          167,  168,  177,  755,  756,  394,  758,  778,  779,  780,
          781,  782,  783,  784,  786,  723,  142,  143,  144,  146,
          147,  148,  149,  151,  175,  176,  178,  194,  210,  211,
          212,  213,  214,  215,  216,  217,  219,  220,  221,  222,
          234,  235,  270,  271,  272,  429,  430,  431,  180,  181,
          182,  183,  184,  185,  186,  187,  188,  189,  190,  153,
          154,  155,  156,  173,  157,  192,  158,  159,  160,  161,
          193,  162,  191,  136,  163,  164,  449,  449,  449,  449,
          449,  449,  449,  449,  449,  449,  449,  449,  449,  449,
          449,  841,  841,  841,  841,  841,  841,  841,  841,  841,
          841,  841,  841,  841,  841,  841,  426,  396,  396,  396,
          396,  396,  396,  893,  596,  293,  597,  396,  396,  396,
          396,  804,  396,  396,  396,  804,  396,  396,  396,  804,
          396,  396,  396,  660,  660,  660,  660,  660,  554,  554,
          554,  511,  569,  677,  632,  843,  844,  675,  633,  857,
          656,  712,  658,  710,  624,  624,  624,  624,  308,  619,
          625,  493,  397,  397,  397,  397,  397,  397,  553,  553,
          553,  483,  397,  397,  397,  397,  400,  397,  397,  397,
          400,  397,  397,  397,  400,  397,  397,  397,  425,  425,
          425,  419,  457,  291,  439,  441,  444,  224,  422,  422,
          395,  398,  225,  412,  322,  325,  267,  458,  461,  472,
          259,  329,  486,  332,  450,  450,  450,  450,  450,  450,
          450,  450,  450,  450,  450,  450,  450,  450,  450,    5,
          855,  870,  462,  489,   15,  870,    6,    7,  328,  870,
          767,    8,    9,   10,  361,   16,   11,   17,   12,   18,
           13,   19,   14,  552,  552,  552,  402,  702,  335,  401,
          402,  816,  815,  401,  402,  886,  321,  401,  290,  475,
          286,  334,  643,  630,  628,  628,  626,  628,  528,  403,
          650,  646,  309,  311,  411,  311,  869,  363,  561,  420,
          869,  294,  295,  669,  869,  465,  436,  437,  440,  443,
          474,  476,  497,  251,  492,  538,  496,  514,  885,  885,
          885,  899,  899,  464,  471,  516,  316,  316,  316,  902,
          899,  330,    1,  868,    2,  567,  852,  721,  605,  408,
            0,  316,    0,    0,  319,  902,  902,  428,  494,  327
    );

    protected static $yygcheck = array(
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   35,   35,   35,   35,
           35,   35,   35,   35,   35,   35,   35,   35,   35,   35,
           35,   83,   83,   83,   83,   83,   83,   83,   83,   83,
           83,   83,   83,   83,   83,   83,   67,   35,   35,   35,
           35,   35,   35,   92,   29,   43,   29,   35,   35,   35,
           35,   35,   35,   35,   35,   35,   35,   35,   35,   35,
           35,   35,   35,   35,   35,   35,   35,   35,    7,    7,
            7,   35,   12,   12,   12,   12,   12,   12,   12,   12,
           12,   12,   12,   12,   35,   35,   35,   35,   26,   35,
           35,   35,   72,   72,   72,   72,   72,   72,    6,    6,
            6,   84,   72,   72,   72,   72,   72,   72,   72,   72,
           72,   72,   72,   72,   72,   72,   72,   72,   28,   28,
           28,   28,   28,   28,   81,   81,   81,   40,   28,   28,
           28,   28,   40,   28,   28,   28,   82,   28,   28,   28,
           82,   28,   28,   28,   75,   75,   75,   75,   75,   75,
           75,   75,   75,   75,   75,   75,   75,   75,   75,   13,
           87,   73,   21,   21,   13,   73,   13,   13,   62,   73,
           63,   13,   13,   13,   63,   13,   13,   13,   13,   13,
           13,   13,   13,    5,    5,    5,   78,   60,   60,   75,
           78,   80,   80,   75,   78,   90,   27,   75,    4,   42,
           42,   42,    5,    5,    5,    5,    5,    5,    5,    5,
            5,    5,   30,    4,   30,    4,   74,   46,   10,   30,
           74,   43,   43,   49,   74,   30,   47,   47,   47,   47,
           47,   47,   47,   30,   30,   44,   30,   30,   74,   74,
           74,   93,   93,   36,   36,   36,   79,   79,   79,   93,
           93,    9,    2,   74,    2,   11,   86,   64,   34,    4,
           -1,   79,   -1,   -1,    4,   93,   93,    4,   69,   79
    );

    protected static $yygbase = array(
            0,    0, -171,    0,   17,  282,  197,  167,    0,   13,
           20,    3,  -26, -263,    0,  -30,    0,    0,    0,    0,
            0,  211,    0,    0,    0,    0,  135,   59,   -8,  121,
          -29,    0,    0,    0,   -1,  -89,   90,    0,    0,    0,
         -299,    0,   25, -211,   31,    0,   61,  293,    0,   23,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
           55,    0,   41,   26,   -4,    0,    0,  105,    0,    4,
            0,    0,  -34,   21,   76,   49,    0,    0,   46,   84,
           28,  169,  -25,  -74,    5,    0,   -2,   63,    0,    0,
           67,    0,  103,   83,    0
    );

    protected static $yygdefault = array(
        -32768,  367,    3,  548,  387,  572,  573,  574,  312,  310,
          562,  568,  466,    4,  570,  137,  302,  577,  303,  500,
          579,  414,  581,  582,  313,  314,  415,  320,  218,  595,
          502,  318,  598,  359,  604,  306,  446,  388,  353,  459,
          223,  423,  454,  292,  542,  447,  354,  433,  434,  670,
          678,  360,  331,  473,  682,  683,  260,  687,  512,  513,
          701,  232,  323,  345,  722,  785,  787,  399,  409,  481,
          333,  861,  389,  390,  391,  812,  809,  289,  860,  287,
          432,  438,  258,  847,  467,  358,  892,  856,  288,  307,
          887,  344,  894,  901,  456
    );

    protected static $yylhs = array(
            0,    1,    2,    2,    4,    4,    3,    3,    3,    3,
            3,    3,    3,    3,    3,    8,    8,   10,   10,   10,
           10,    9,    9,   11,   13,   13,   14,   14,   14,   14,
            5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
            5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
            5,    5,    5,    5,    5,    5,    5,    5,   33,   33,
           34,   27,   27,   30,   30,    6,    7,    7,    7,   37,
           37,   37,   38,   38,   41,   41,   39,   39,   42,   42,
           22,   22,   29,   29,   32,   32,   31,   31,   23,   23,
           23,   23,   43,   43,   43,   44,   44,   20,   20,   16,
           16,   18,   18,   17,   17,   19,   19,   36,   36,   45,
           45,   45,   45,   46,   46,   46,   46,   47,   47,   48,
           48,   48,   48,   24,   24,   49,   49,   49,   25,   25,
           25,   25,   40,   40,   50,   50,   50,   50,   55,   55,
           56,   56,   57,   57,   57,   57,   58,   59,   59,   54,
           54,   51,   51,   53,   53,   61,   61,   60,   60,   60,
           60,   60,   60,   52,   52,   52,   52,   26,   26,   21,
           21,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   69,   69,
           70,   70,   71,   71,   71,   71,   71,   75,   75,   35,
           35,   35,   63,   63,   76,   76,   72,   72,   77,   77,
           77,   77,   77,   65,   65,   65,   68,   68,   68,   64,
           64,   83,   83,   83,   83,   83,   83,   83,   83,   83,
           83,   83,   83,   83,   83,   12,   12,   12,   12,   12,
           12,   66,   66,   66,   66,   84,   84,   86,   86,   85,
           85,   87,   87,   28,   28,   28,   88,   88,   88,   88,
           88,   74,   74,   78,   78,   73,   73,   89,   89,   89,
           89,   79,   79,   79,   79,   81,   81,   80,   80,   80,
           62,   62,   90,   90,   90,   67,   67,   91,   91,   92,
           92,   92,   92,   82,   82,   82,   82,   93,   93,   93,
           93,   93,   93,   93,   94,   94,   94
    );

    protected static $yylen = array(
            1,    1,    2,    0,    1,    3,    1,    1,    1,    1,
            3,    5,    4,    3,    3,    3,    1,    1,    3,    2,
            4,    3,    1,    3,    2,    0,    1,    1,    1,    1,
            3,    7,   10,    5,    7,    9,    5,    2,    3,    2,
            3,    2,    3,    3,    3,    3,    1,    2,    5,    7,
            8,   10,    5,    1,    5,    3,    3,    2,    1,    2,
            8,    1,    3,    0,    1,    9,    7,    6,    5,    1,
            2,    2,    0,    2,    0,    2,    0,    2,    1,    3,
            1,    4,    1,    4,    1,    4,    3,    5,    3,    4,
            4,    5,    0,    5,    4,    1,    1,    1,    4,    0,
            6,    0,    7,    0,    2,    0,    3,    1,    0,    3,
            5,    5,    7,    0,    1,    1,    1,    1,    0,    1,
            2,    3,    4,    3,    1,    1,    2,    4,    3,    5,
            1,    3,    2,    0,    3,    3,    8,    3,    1,    3,
            0,    2,    4,    5,    4,    4,    3,    1,    1,    1,
            3,    1,    1,    0,    1,    1,    2,    1,    1,    1,
            1,    1,    1,    3,    5,    1,    3,    3,    1,    0,
            1,    1,    6,    3,    4,    6,    3,    2,    3,    3,
            3,    3,    3,    3,    3,    3,    3,    3,    3,    2,
            2,    2,    2,    3,    3,    3,    3,    3,    3,    3,
            3,    3,    3,    3,    3,    3,    3,    3,    3,    2,
            2,    2,    2,    3,    3,    3,    3,    3,    3,    3,
            3,    3,    3,    5,    4,    4,    4,    2,    2,    4,
            2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
            2,    1,    4,    3,    3,    2,    9,   10,    0,    4,
            4,    2,    4,    6,    8,    4,    4,    1,    1,    1,
            2,    3,    1,    1,    1,    1,    1,    1,    0,    3,
            3,    4,    4,    0,    2,    3,    0,    1,    1,    0,
            3,    1,    1,    1,    1,    1,    1,    1,    1,    1,
            1,    1,    3,    2,    1,    1,    3,    2,    2,    4,
            3,    1,    3,    3,    3,    0,    2,    0,    1,    3,
            1,    3,    1,    1,    1,    1,    3,    6,    4,    4,
            4,    1,    2,    1,    1,    4,    1,    3,    6,    4,
            4,    4,    4,    1,    4,    0,    1,    1,    3,    1,
            3,    1,    1,    4,    0,    0,    2,    3,    1,    3,
            1,    4,    2,    2,    2,    1,    2,    1,    4,    3,
            3,    3,    6,    3,    1,    1,    1
    );

    protected $yyval;
    protected $yyastk;
    protected $yysp;
    protected $lexer;

    /**
     * Parses PHP code into a node tree.
     *
     * @param PHPParser_Lexer $lexer A lexer
     *
     * @return array Array of statements
     */
    public function parse(PHPParser_Lexer $lexer) {
        $this->lexer  = $lexer;

        $this->yysp   = 0;                   // Stack pos
        $yysstk       = array($yystate = 0); // State stack
        $this->yyastk = array();             // AST   stack (?)
        $yylstk       = array($yyline  = 1); // Line  stack
        $yydstk       = array($yyDC = null); // Doc comment stack

        $yychar       = -1;

        for (;;) {
            if (self::$yybase[$yystate] == 0) {
                $yyn = self::$yydefault[$yystate];
            } else {
                if ($yychar < 0) {
                    if (($yychar = $lexer->lex($yylval, $yyline, $yyDC)) < 0)
                        $yychar = 0;
                    $yychar = $yychar < self::YYMAXLEX ?
                        self::$yytranslate[$yychar] : self::YYBADCH;
                    $yylstk[$this->yysp] = $yyline;
                    $yydstk[$this->yysp] = $yyDC;
                }
                if ((($yyn = self::$yybase[$yystate] + $yychar) >= 0
                     && $yyn < self::YYLAST && self::$yycheck[$yyn] == $yychar
                     || ($yystate < self::YY2TBLSTATE
                        && ($yyn = self::$yybase[$yystate + self::YYNLSTATES]
                            + $yychar) >= 0
                        && $yyn < self::YYLAST
                        && self::$yycheck[$yyn] == $yychar))
                    && ($yyn = self::$yyaction[$yyn]) != self::YYDEFAULT) {
                    /*
                     * >= YYNLSTATE: shift and reduce
                     * > 0: shift
                     * = 0: accept
                     * < 0: reduce
                     * = -YYUNEXPECTED: error
                     */
                    if ($yyn > 0) {
                        /* shift */
                        ++$this->yysp;

                        $yysstk[$this->yysp]       = $yystate = $yyn;
                        $this->yyastk[$this->yysp] = $yylval;
                        $yylstk[$this->yysp]       = $yyline;
                        $yydstk[$this->yysp]       = $yyDC;
                        $yychar = -1;

                        if ($yyn < self::YYNLSTATES)
                            continue;

                        /* $yyn >= YYNLSTATES means shift-and-reduce */
                        $yyn -= self::YYNLSTATES;
                    } else {
                        $yyn = -$yyn;
                    }
                } else {
                    $yyn = self::$yydefault[$yystate];
                }
            }

            for (;;) {
                /* reduce/error */
                if ($yyn == 0) {
                    /* accept */
                    return $this->yyval;
                } elseif ($yyn != self::YYUNEXPECTED) {
                    /* reduce */
                    try {
                        $this->{'yyn' . $yyn}(
                            $yylstk[$this->yysp - self::$yylen[$yyn]],
                            $yydstk[$this->yysp - self::$yylen[$yyn]]
                        );
                    } catch (PHPParser_Error $e) {
                        $e->setRawLine($yyline);

                        throw $e;
                    }

                    /* Goto - shift nonterminal */
                    $this->yysp -= self::$yylen[$yyn];
                    $yyn = self::$yylhs[$yyn];
                    if (($yyp = self::$yygbase[$yyn] + $yysstk[$this->yysp]) >= 0
                         && $yyp < self::YYGLAST
                         && self::$yygcheck[$yyp] == $yyn) {
                        $yystate = self::$yygoto[$yyp];
                    } else {
                        $yystate = self::$yygdefault[$yyn];
                    }

                    ++$this->yysp;

                    $yysstk[$this->yysp] = $yystate;
                    $this->yyastk[$this->yysp] = $this->yyval;
                    $yylstk[$this->yysp]       = $yyline;
                    $yydstk[$this->yysp]       = $yyDC;
                } else {
                    /* error */
                    throw new PHPParser_Error(
                        'Unexpected token ' . self::$yyterminals[$yychar],
                        $yyline
                    );
                }

                if ($yystate < self::YYNLSTATES)
                    break;
                /* >= YYNLSTATES means shift-and-reduce */
                $yyn = $yystate - self::YYNLSTATES;
            }
        }
    }

    protected function yyn0() {
        $this->yyval = $this->yyastk[$this->yysp];
    }

    protected function yyn1($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Namespace::postprocess($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn2($line, $docComment) {
         if (is_array($this->yyastk[$this->yysp-(2-2)])) { $this->yyval = array_merge($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); } else { $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; }; 
    }

    protected function yyn3($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn4($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn5($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn6($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn7($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn8($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn9($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_HaltCompiler($this->lexer->handleHaltCompiler(), $line, $docComment); 
    }

    protected function yyn10($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Namespace(new PHPParser_Node_Name($this->yyastk[$this->yysp-(3-2)], $line, $docComment), null, $line, $docComment); 
    }

    protected function yyn11($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Namespace(new PHPParser_Node_Name($this->yyastk[$this->yysp-(5-2)], $line, $docComment), $this->yyastk[$this->yysp-(5-4)], $line, $docComment); 
    }

    protected function yyn12($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Namespace(null, $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn13($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Use($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn14($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Const($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn15($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn16($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn17($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_UseUse(new PHPParser_Node_Name($this->yyastk[$this->yysp-(1-1)], $line, $docComment), null, $line, $docComment); 
    }

    protected function yyn18($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_UseUse(new PHPParser_Node_Name($this->yyastk[$this->yysp-(3-1)], $line, $docComment), $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn19($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_UseUse(new PHPParser_Node_Name($this->yyastk[$this->yysp-(2-2)], $line, $docComment), null, $line, $docComment); 
    }

    protected function yyn20($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_UseUse(new PHPParser_Node_Name($this->yyastk[$this->yysp-(4-2)], $line, $docComment), $this->yyastk[$this->yysp-(4-4)], $line, $docComment); 
    }

    protected function yyn21($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn22($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn23($line, $docComment) {
         $this->yyval = new PHPParser_Node_Const($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn24($line, $docComment) {
         if (is_array($this->yyastk[$this->yysp-(2-2)])) { $this->yyval = array_merge($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); } else { $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; }; 
    }

    protected function yyn25($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn26($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn27($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn28($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn29($line, $docComment) {
         throw new PHPParser_Error('__halt_compiler() can only be used from the outermost scope'); 
    }

    protected function yyn30($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn31($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_If($this->yyastk[$this->yysp-(7-3)], array('stmts' => is_array($this->yyastk[$this->yysp-(7-5)]) ? $this->yyastk[$this->yysp-(7-5)] : array($this->yyastk[$this->yysp-(7-5)]), 'elseifs' => $this->yyastk[$this->yysp-(7-6)], 'else' => $this->yyastk[$this->yysp-(7-7)]), $line, $docComment); 
    }

    protected function yyn32($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_If($this->yyastk[$this->yysp-(10-3)], array('stmts' => $this->yyastk[$this->yysp-(10-6)], 'elseifs' => $this->yyastk[$this->yysp-(10-7)], 'else' => $this->yyastk[$this->yysp-(10-8)]), $line, $docComment); 
    }

    protected function yyn33($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_While($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment); 
    }

    protected function yyn34($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Do($this->yyastk[$this->yysp-(7-5)], is_array($this->yyastk[$this->yysp-(7-2)]) ? $this->yyastk[$this->yysp-(7-2)] : array($this->yyastk[$this->yysp-(7-2)]), $line, $docComment); 
    }

    protected function yyn35($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_For(array('init' => $this->yyastk[$this->yysp-(9-3)], 'cond' => $this->yyastk[$this->yysp-(9-5)], 'loop' => $this->yyastk[$this->yysp-(9-7)], 'stmts' => $this->yyastk[$this->yysp-(9-9)]), $line, $docComment); 
    }

    protected function yyn36($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Switch($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment); 
    }

    protected function yyn37($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Break(null, $line, $docComment); 
    }

    protected function yyn38($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Break($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn39($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Continue(null, $line, $docComment); 
    }

    protected function yyn40($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Continue($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn41($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Return(null, $line, $docComment); 
    }

    protected function yyn42($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Return($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn43($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Global($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn44($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Static($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn45($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Echo($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn46($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_InlineHTML($this->yyastk[$this->yysp-(1-1)], $line, $docComment); 
    }

    protected function yyn47($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn48($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Unset($this->yyastk[$this->yysp-(5-3)], $line, $docComment); 
    }

    protected function yyn49($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Foreach($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], array('keyVar' => null, 'byRef' => false, 'stmts' => $this->yyastk[$this->yysp-(7-7)]), $line, $docComment); 
    }

    protected function yyn50($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Foreach($this->yyastk[$this->yysp-(8-3)], $this->yyastk[$this->yysp-(8-6)], array('keyVar' => null, 'byRef' => true, 'stmts' => $this->yyastk[$this->yysp-(8-8)]), $line, $docComment); 
    }

    protected function yyn51($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Foreach($this->yyastk[$this->yysp-(10-3)], $this->yyastk[$this->yysp-(10-8)], array('keyVar' => $this->yyastk[$this->yysp-(10-5)], 'byRef' => $this->yyastk[$this->yysp-(10-7)], 'stmts' => $this->yyastk[$this->yysp-(10-10)]), $line, $docComment); 
    }

    protected function yyn52($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Declare($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment); 
    }

    protected function yyn53($line, $docComment) {
         $this->yyval = array(); /* means: no statement */ 
    }

    protected function yyn54($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TryCatch($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment); 
    }

    protected function yyn55($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Throw($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn56($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Goto($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn57($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Label($this->yyastk[$this->yysp-(2-1)], $line, $docComment); 
    }

    protected function yyn58($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn59($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn60($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Catch($this->yyastk[$this->yysp-(8-3)], substr($this->yyastk[$this->yysp-(8-4)], 1), $this->yyastk[$this->yysp-(8-7)], $line, $docComment); 
    }

    protected function yyn61($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn62($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn63($line, $docComment) {
         $this->yyval = false; 
    }

    protected function yyn64($line, $docComment) {
         $this->yyval = true; 
    }

    protected function yyn65($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Function($this->yyastk[$this->yysp-(9-3)], array('byRef' => $this->yyastk[$this->yysp-(9-2)], 'params' => $this->yyastk[$this->yysp-(9-5)], 'stmts' => $this->yyastk[$this->yysp-(9-8)]), $line, $docComment); 
    }

    protected function yyn66($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Class($this->yyastk[$this->yysp-(7-2)], array('type' => $this->yyastk[$this->yysp-(7-1)], 'extends' => $this->yyastk[$this->yysp-(7-3)], 'implements' => $this->yyastk[$this->yysp-(7-4)], 'stmts' => $this->yyastk[$this->yysp-(7-6)]), $line, $docComment); 
    }

    protected function yyn67($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Interface($this->yyastk[$this->yysp-(6-2)], array('extends' => $this->yyastk[$this->yysp-(6-3)], 'stmts' => $this->yyastk[$this->yysp-(6-5)]), $line, $docComment); 
    }

    protected function yyn68($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Trait($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)], $line, $docComment); 
    }

    protected function yyn69($line, $docComment) {
         $this->yyval = 0; 
    }

    protected function yyn70($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_ABSTRACT; 
    }

    protected function yyn71($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_FINAL; 
    }

    protected function yyn72($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn73($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
    }

    protected function yyn74($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn75($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
    }

    protected function yyn76($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn77($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-2)]; 
    }

    protected function yyn78($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn79($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn80($line, $docComment) {
         $this->yyval = is_array($this->yyastk[$this->yysp-(1-1)]) ? $this->yyastk[$this->yysp-(1-1)] : array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn81($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-2)]; 
    }

    protected function yyn82($line, $docComment) {
         $this->yyval = is_array($this->yyastk[$this->yysp-(1-1)]) ? $this->yyastk[$this->yysp-(1-1)] : array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn83($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-2)]; 
    }

    protected function yyn84($line, $docComment) {
         $this->yyval = is_array($this->yyastk[$this->yysp-(1-1)]) ? $this->yyastk[$this->yysp-(1-1)] : array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn85($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-2)]; 
    }

    protected function yyn86($line, $docComment) {
         $this->yyval = array(new PHPParser_Node_Stmt_DeclareDeclare($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment)); 
    }

    protected function yyn87($line, $docComment) {
         $this->yyastk[$this->yysp-(5-1)][] = new PHPParser_Node_Stmt_DeclareDeclare($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment); $this->yyval = $this->yyastk[$this->yysp-(5-1)]; 
    }

    protected function yyn88($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn89($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-3)]; 
    }

    protected function yyn90($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-2)]; 
    }

    protected function yyn91($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(5-3)]; 
    }

    protected function yyn92($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn93($line, $docComment) {
         $this->yyastk[$this->yysp-(5-1)][] = new PHPParser_Node_Stmt_Case($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment); $this->yyval = $this->yyastk[$this->yysp-(5-1)]; 
    }

    protected function yyn94($line, $docComment) {
         $this->yyastk[$this->yysp-(4-1)][] = new PHPParser_Node_Stmt_Case(null, $this->yyastk[$this->yysp-(4-4)], $line, $docComment); $this->yyval = $this->yyastk[$this->yysp-(4-1)]; 
    }

    protected function yyn95() {
        $this->yyval = $this->yyastk[$this->yysp];
    }

    protected function yyn96() {
        $this->yyval = $this->yyastk[$this->yysp];
    }

    protected function yyn97($line, $docComment) {
         $this->yyval = is_array($this->yyastk[$this->yysp-(1-1)]) ? $this->yyastk[$this->yysp-(1-1)] : array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn98($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-2)]; 
    }

    protected function yyn99($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn100($line, $docComment) {
         $this->yyastk[$this->yysp-(6-1)][] = new PHPParser_Node_Stmt_ElseIf($this->yyastk[$this->yysp-(6-4)], is_array($this->yyastk[$this->yysp-(6-6)]) ? $this->yyastk[$this->yysp-(6-6)] : array($this->yyastk[$this->yysp-(6-6)]), $line, $docComment); $this->yyval = $this->yyastk[$this->yysp-(6-1)]; 
    }

    protected function yyn101($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn102($line, $docComment) {
         $this->yyastk[$this->yysp-(7-1)][] = new PHPParser_Node_Stmt_ElseIf($this->yyastk[$this->yysp-(7-4)], $this->yyastk[$this->yysp-(7-7)], $line, $docComment); $this->yyval = $this->yyastk[$this->yysp-(7-1)]; 
    }

    protected function yyn103($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn104($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Else(is_array($this->yyastk[$this->yysp-(2-2)]) ? $this->yyastk[$this->yysp-(2-2)] : array($this->yyastk[$this->yysp-(2-2)]), $line, $docComment); 
    }

    protected function yyn105($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn106($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Else($this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn107($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn108($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn109($line, $docComment) {
         $this->yyval = array(new PHPParser_Node_Param(substr($this->yyastk[$this->yysp-(3-3)], 1), null, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $line, $docComment)); 
    }

    protected function yyn110($line, $docComment) {
         $this->yyval = array(new PHPParser_Node_Param(substr($this->yyastk[$this->yysp-(5-3)], 1), $this->yyastk[$this->yysp-(5-5)], $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-2)], $line, $docComment)); 
    }

    protected function yyn111($line, $docComment) {
         $this->yyastk[$this->yysp-(5-1)][] = new PHPParser_Node_Param(substr($this->yyastk[$this->yysp-(5-5)], 1), null, $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], $line, $docComment); $this->yyval = $this->yyastk[$this->yysp-(5-1)]; 
    }

    protected function yyn112($line, $docComment) {
         $this->yyastk[$this->yysp-(7-1)][] = new PHPParser_Node_Param(substr($this->yyastk[$this->yysp-(7-5)], 1), $this->yyastk[$this->yysp-(7-7)], $this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-4)], $line, $docComment); $this->yyval = $this->yyastk[$this->yysp-(7-1)]; 
    }

    protected function yyn113($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn114($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn115($line, $docComment) {
         $this->yyval = 'array'; 
    }

    protected function yyn116($line, $docComment) {
         $this->yyval = 'callable'; 
    }

    protected function yyn117($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn118($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn119($line, $docComment) {
         $this->yyval = array(new PHPParser_Node_Arg($this->yyastk[$this->yysp-(1-1)], false, $line, $docComment)); 
    }

    protected function yyn120($line, $docComment) {
         $this->yyval = array(new PHPParser_Node_Arg($this->yyastk[$this->yysp-(2-2)], true, $line, $docComment)); 
    }

    protected function yyn121($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = new PHPParser_Node_Arg($this->yyastk[$this->yysp-(3-3)], false, $line, $docComment); $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn122($line, $docComment) {
         $this->yyastk[$this->yysp-(4-1)][] = new PHPParser_Node_Arg($this->yyastk[$this->yysp-(4-4)], true, $line, $docComment); $this->yyval = $this->yyastk[$this->yysp-(4-1)]; 
    }

    protected function yyn123($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn124($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn125($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(1-1)], 1), $line, $docComment); 
    }

    protected function yyn126($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn127($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn128($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = new PHPParser_Node_Stmt_StaticVar(substr($this->yyastk[$this->yysp-(3-3)], 1), null, $line, $docComment); $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn129($line, $docComment) {
         $this->yyastk[$this->yysp-(5-1)][] = new PHPParser_Node_Stmt_StaticVar(substr($this->yyastk[$this->yysp-(5-3)], 1), $this->yyastk[$this->yysp-(5-5)], $line, $docComment); $this->yyval = $this->yyastk[$this->yysp-(5-1)]; 
    }

    protected function yyn130($line, $docComment) {
         $this->yyval = array(new PHPParser_Node_Stmt_StaticVar(substr($this->yyastk[$this->yysp-(1-1)], 1), null, $line, $docComment)); 
    }

    protected function yyn131($line, $docComment) {
         $this->yyval = array(new PHPParser_Node_Stmt_StaticVar(substr($this->yyastk[$this->yysp-(3-1)], 1), $this->yyastk[$this->yysp-(3-3)], $line, $docComment)); 
    }

    protected function yyn132($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn133($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn134($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Property($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn135($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_ClassConst($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn136($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_ClassMethod($this->yyastk[$this->yysp-(8-4)], array('type' => $this->yyastk[$this->yysp-(8-1)], 'byRef' => $this->yyastk[$this->yysp-(8-3)], 'params' => $this->yyastk[$this->yysp-(8-6)], 'stmts' => $this->yyastk[$this->yysp-(8-8)]), $line, $docComment); 
    }

    protected function yyn137($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TraitUse($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn138($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn139($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn140($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn141($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn142($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TraitUseAdaptation_Precedence($this->yyastk[$this->yysp-(4-1)][0], $this->yyastk[$this->yysp-(4-1)][1], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn143($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TraitUseAdaptation_Alias($this->yyastk[$this->yysp-(5-1)][0], $this->yyastk[$this->yysp-(5-1)][1], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], $line, $docComment); 
    }

    protected function yyn144($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TraitUseAdaptation_Alias($this->yyastk[$this->yysp-(4-1)][0], $this->yyastk[$this->yysp-(4-1)][1], $this->yyastk[$this->yysp-(4-3)], null, $line, $docComment); 
    }

    protected function yyn145($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TraitUseAdaptation_Alias($this->yyastk[$this->yysp-(4-1)][0], $this->yyastk[$this->yysp-(4-1)][1], null, $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn146($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]); 
    }

    protected function yyn147($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn148($line, $docComment) {
         $this->yyval = array(null, $this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn149($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn150($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn151($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn152($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_PUBLIC; 
    }

    protected function yyn153($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_PUBLIC; 
    }

    protected function yyn154($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn155($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn156($line, $docComment) {
         PHPParser_Node_Stmt_Class::verifyModifier($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); $this->yyval = $this->yyastk[$this->yysp-(2-1)] | $this->yyastk[$this->yysp-(2-2)]; 
    }

    protected function yyn157($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_PUBLIC; 
    }

    protected function yyn158($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_PROTECTED; 
    }

    protected function yyn159($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_PRIVATE; 
    }

    protected function yyn160($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_STATIC; 
    }

    protected function yyn161($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_ABSTRACT; 
    }

    protected function yyn162($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_FINAL; 
    }

    protected function yyn163($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = new PHPParser_Node_Stmt_PropertyProperty(substr($this->yyastk[$this->yysp-(3-3)], 1), null, $line, $docComment); $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn164($line, $docComment) {
         $this->yyastk[$this->yysp-(5-1)][] = new PHPParser_Node_Stmt_PropertyProperty(substr($this->yyastk[$this->yysp-(5-3)], 1), $this->yyastk[$this->yysp-(5-5)], $line, $docComment); $this->yyval = $this->yyastk[$this->yysp-(5-1)]; 
    }

    protected function yyn165($line, $docComment) {
         $this->yyval = array(new PHPParser_Node_Stmt_PropertyProperty(substr($this->yyastk[$this->yysp-(1-1)], 1), null, $line, $docComment)); 
    }

    protected function yyn166($line, $docComment) {
         $this->yyval = array(new PHPParser_Node_Stmt_PropertyProperty(substr($this->yyastk[$this->yysp-(3-1)], 1), $this->yyastk[$this->yysp-(3-3)], $line, $docComment)); 
    }

    protected function yyn167($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn168($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn169($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn170($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn171($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn172($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignList($this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-6)], $line, $docComment); 
    }

    protected function yyn173($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Assign($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn174($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignRef($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-4)], $line, $docComment); 
    }

    protected function yyn175($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Assign($this->yyastk[$this->yysp-(6-1)], new PHPParser_Node_Expr_New($this->yyastk[$this->yysp-(6-5)], $this->yyastk[$this->yysp-(6-6)], $line, $docComment), $line, $docComment); 
    }

    protected function yyn176($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_New($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn177($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Clone($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn178($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignPlus($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn179($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignMinus($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn180($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignMul($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn181($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignDiv($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn182($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignConcat($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn183($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignMod($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn184($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignBitwiseAnd($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn185($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignBitwiseOr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn186($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignBitwiseXor($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn187($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignShiftLeft($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn188($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignShiftRight($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn189($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PostInc($this->yyastk[$this->yysp-(2-1)], $line, $docComment); 
    }

    protected function yyn190($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PreInc($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn191($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PostDec($this->yyastk[$this->yysp-(2-1)], $line, $docComment); 
    }

    protected function yyn192($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PreDec($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn193($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BooleanOr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn194($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BooleanAnd($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn195($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_LogicalOr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn196($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_LogicalAnd($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn197($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_LogicalXor($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn198($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BitwiseOr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn199($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BitwiseAnd($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn200($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BitwiseXor($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn201($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Concat($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn202($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Plus($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn203($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Minus($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn204($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Mul($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn205($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Div($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn206($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Mod($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn207($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ShiftLeft($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn208($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ShiftRight($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn209($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_UnaryPlus($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn210($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_UnaryMinus($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn211($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BooleanNot($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn212($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BitwiseNot($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn213($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Identical($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn214($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_NotIdentical($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn215($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Equal($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn216($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_NotEqual($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn217($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Smaller($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn218($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_SmallerOrEqual($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn219($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Greater($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn220($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_GreaterOrEqual($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn221($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Instanceof($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn222($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn223($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Ternary($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment); 
    }

    protected function yyn224($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Ternary($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-4)], $line, $docComment); 
    }

    protected function yyn225($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Isset($this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn226($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Empty($this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn227($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Include($this->yyastk[$this->yysp-(2-2)], PHPParser_Node_Expr_Include::TYPE_INCLUDE, $line, $docComment); 
    }

    protected function yyn228($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Include($this->yyastk[$this->yysp-(2-2)], PHPParser_Node_Expr_Include::TYPE_INCLUDE_ONCE, $line, $docComment); 
    }

    protected function yyn229($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Eval($this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn230($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Include($this->yyastk[$this->yysp-(2-2)], PHPParser_Node_Expr_Include::TYPE_REQUIRE, $line, $docComment); 
    }

    protected function yyn231($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Include($this->yyastk[$this->yysp-(2-2)], PHPParser_Node_Expr_Include::TYPE_REQUIRE_ONCE, $line, $docComment); 
    }

    protected function yyn232($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Int($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn233($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Double($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn234($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_String($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn235($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Array($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn236($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Object($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn237($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Bool($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn238($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Unset($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn239($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Exit($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn240($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ErrorSuppress($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn241($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn242($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Array($this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn243($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Array($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn244($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ShellExec($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn245($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Print($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn246($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Closure(array('static' => false, 'byRef' => $this->yyastk[$this->yysp-(9-2)], 'params' => $this->yyastk[$this->yysp-(9-4)], 'uses' => $this->yyastk[$this->yysp-(9-6)], 'stmts' => $this->yyastk[$this->yysp-(9-8)]), $line, $docComment); 
    }

    protected function yyn247($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Closure(array('static' => true, 'byRef' => $this->yyastk[$this->yysp-(10-3)], 'params' => $this->yyastk[$this->yysp-(10-5)], 'uses' => $this->yyastk[$this->yysp-(10-7)], 'stmts' => $this->yyastk[$this->yysp-(10-9)]), $line, $docComment); 
    }

    protected function yyn248($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn249($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-3)]; 
    }

    protected function yyn250($line, $docComment) {
         $this->yyastk[$this->yysp-(4-1)][] = new PHPParser_Node_Expr_ClosureUse(substr($this->yyastk[$this->yysp-(4-4)], 1), $this->yyastk[$this->yysp-(4-3)], $line, $docComment); $this->yyval = $this->yyastk[$this->yysp-(4-1)]; 
    }

    protected function yyn251($line, $docComment) {
         $this->yyval = array(new PHPParser_Node_Expr_ClosureUse(substr($this->yyastk[$this->yysp-(2-2)], 1), $this->yyastk[$this->yysp-(2-1)], $line, $docComment)); 
    }

    protected function yyn252($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_FuncCall($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn253($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticCall($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)], $line, $docComment); 
    }

    protected function yyn254($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticCall($this->yyastk[$this->yysp-(8-1)], $this->yyastk[$this->yysp-(8-4)], $this->yyastk[$this->yysp-(8-7)], $line, $docComment); 
    }

    protected function yyn255($line, $docComment) {
        
            if ($this->yyastk[$this->yysp-(4-1)] instanceof PHPParser_Node_Expr_StaticPropertyFetch) {
                $this->yyval = new PHPParser_Node_Expr_StaticCall($this->yyastk[$this->yysp-(4-1)]->class, new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(4-1)]->name, $line, $docComment), $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
            } elseif ($this->yyastk[$this->yysp-(4-1)] instanceof PHPParser_Node_Expr_ArrayDimFetch) {
                $tmp = $this->yyastk[$this->yysp-(4-1)];
                while ($tmp->var instanceof PHPParser_Node_Expr_ArrayDimFetch) {
                    $tmp = $tmp->var;
                }

                $this->yyval = new PHPParser_Node_Expr_StaticCall($tmp->var->class, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
                $tmp->var = new PHPParser_Node_Expr_Variable($tmp->var->name, $line, $docComment);
            } else {
                throw new Exception;
            }
          
    }

    protected function yyn256($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_FuncCall($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn257($line, $docComment) {
         $this->yyval = new PHPParser_Node_Name('static', $line, $docComment); 
    }

    protected function yyn258($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn259($line, $docComment) {
         $this->yyval = new PHPParser_Node_Name($this->yyastk[$this->yysp-(1-1)], $line, $docComment); 
    }

    protected function yyn260($line, $docComment) {
         $this->yyval = new PHPParser_Node_Name_FullyQualified($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn261($line, $docComment) {
         $this->yyval = new PHPParser_Node_Name_Relative($this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn262($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn263($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn264($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn265($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn266($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn267($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn268() {
        $this->yyval = $this->yyastk[$this->yysp];
    }

    protected function yyn269($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PropertyFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn270($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PropertyFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn271($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn272($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn273($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn274($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn275($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn276($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn277($line, $docComment) {
         $this->yyval = array(PHPParser_Node_Scalar_String::parseEscapeSequences($this->yyastk[$this->yysp-(1-1)], '`')); 
    }

    protected function yyn278($line, $docComment) {
         foreach ($this->yyastk[$this->yysp-(1-1)] as &$s) { if (is_string($s)) { $s = PHPParser_Node_Scalar_String::parseEscapeSequences($s, '`'); } }; $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn279($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn280($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn281($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_LNumber((int) $this->yyastk[$this->yysp-(1-1)], $line, $docComment); 
    }

    protected function yyn282($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_DNumber((double) $this->yyastk[$this->yysp-(1-1)], $line, $docComment); 
    }

    protected function yyn283($line, $docComment) {
         $this->yyval = PHPParser_Node_Scalar_String::create($this->yyastk[$this->yysp-(1-1)], $line, $docComment); 
    }

    protected function yyn284($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_LineConst($line, $docComment); 
    }

    protected function yyn285($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_FileConst($line, $docComment); 
    }

    protected function yyn286($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_DirConst($line, $docComment); 
    }

    protected function yyn287($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_ClassConst($line, $docComment); 
    }

    protected function yyn288($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_TraitConst($line, $docComment); 
    }

    protected function yyn289($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_MethodConst($line, $docComment); 
    }

    protected function yyn290($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_FuncConst($line, $docComment); 
    }

    protected function yyn291($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_NSConst($line, $docComment); 
    }

    protected function yyn292($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_String(PHPParser_Node_Scalar_String::parseEscapeSequences($this->yyastk[$this->yysp-(3-2)], null), $line, $docComment); 
    }

    protected function yyn293($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_String('', $line, $docComment); 
    }

    protected function yyn294($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ConstFetch($this->yyastk[$this->yysp-(1-1)], $line, $docComment); 
    }

    protected function yyn295($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn296($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ClassConstFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn297($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_UnaryPlus($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn298($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_UnaryMinus($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn299($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Array($this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn300($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Array($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn301($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn302($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ClassConstFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn303($line, $docComment) {
         foreach ($this->yyastk[$this->yysp-(3-2)] as &$s) { if (is_string($s)) { $s = PHPParser_Node_Scalar_String::parseEscapeSequences($s, '"'); } }; $this->yyval = new PHPParser_Node_Scalar_Encapsed($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn304($line, $docComment) {
         foreach ($this->yyastk[$this->yysp-(3-2)] as &$s) { if (is_string($s)) { $s = PHPParser_Node_Scalar_String::parseEscapeSequences($s, null); } }; $this->yyval = new PHPParser_Node_Scalar_Encapsed($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn305($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn306($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn307() {
        $this->yyval = $this->yyastk[$this->yysp];
    }

    protected function yyn308() {
        $this->yyval = $this->yyastk[$this->yysp];
    }

    protected function yyn309($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn310($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn311($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(3-3)], $this->yyastk[$this->yysp-(3-1)], false, $line, $docComment); 
    }

    protected function yyn312($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(1-1)], null, false, $line, $docComment); 
    }

    protected function yyn313($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn314($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn315($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn316($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PropertyFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn317($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_MethodCall($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)], $line, $docComment); 
    }

    protected function yyn318($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_FuncCall($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn319($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn320($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn321($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn322($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(2-2)], $line, $docComment); 
    }

    protected function yyn323($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn324($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn325($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticPropertyFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-4)], $line, $docComment); 
    }

    protected function yyn326($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn327($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticPropertyFetch($this->yyastk[$this->yysp-(3-1)], substr($this->yyastk[$this->yysp-(3-3)], 1), $line, $docComment); 
    }

    protected function yyn328($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticPropertyFetch($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-5)], $line, $docComment); 
    }

    protected function yyn329($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn330($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn331($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn332($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn333($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(1-1)], 1), $line, $docComment); 
    }

    protected function yyn334($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn335($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn336($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn337($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn338($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn339($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn340($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn341($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn342($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)]; 
    }

    protected function yyn343($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-3)]; 
    }

    protected function yyn344($line, $docComment) {
         $this->yyval = null; 
    }

    protected function yyn345($line, $docComment) {
         $this->yyval = array(); 
    }

    protected function yyn346($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn347($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)]; 
    }

    protected function yyn348($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn349($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(3-3)], $this->yyastk[$this->yysp-(3-1)], false, $line, $docComment); 
    }

    protected function yyn350($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(1-1)], null, false, $line, $docComment); 
    }

    protected function yyn351($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(4-4)], $this->yyastk[$this->yysp-(4-1)], true, $line, $docComment); 
    }

    protected function yyn352($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(2-2)], null, true, $line, $docComment); 
    }

    protected function yyn353($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn354($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; 
    }

    protected function yyn355($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]); 
    }

    protected function yyn356($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); 
    }

    protected function yyn357($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(1-1)], 1), $line, $docComment); 
    }

    protected function yyn358($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch(new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(4-1)], 1), $line, $docComment), $this->yyastk[$this->yysp-(4-3)], $line, $docComment); 
    }

    protected function yyn359($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PropertyFetch(new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(3-1)], 1), $line, $docComment), $this->yyastk[$this->yysp-(3-3)], $line, $docComment); 
    }

    protected function yyn360($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn361($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(3-2)], $line, $docComment); 
    }

    protected function yyn362($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch(new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(6-2)], $line, $docComment), $this->yyastk[$this->yysp-(6-4)], $line, $docComment); 
    }

    protected function yyn363($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)]; 
    }

    protected function yyn364($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_String($this->yyastk[$this->yysp-(1-1)], $line, $docComment); 
    }

    protected function yyn365($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_LNumber((int) $this->yyastk[$this->yysp-(1-1)], $line, $docComment); 
    }

    protected function yyn366($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(1-1)], 1), $line, $docComment); 
    }
}

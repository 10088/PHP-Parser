<?php

namespace PhpParser\Parser;

use PhpParser\Error;
use PhpParser\Node;
use PhpParser\Node\Expr;
use PhpParser\Node\Name;
use PhpParser\Node\Scalar;
use PhpParser\Node\Stmt;

/* This is an automatically GENERATED file, which should not be manually edited.
 * Instead edit one of the following:
 *  * the grammar files grammar/php5.y or grammar/php7.y
 *  * the skeleton file grammar/kymacc.php.parser
 *  * the preprocessing script grammar/rebuildParsers.php
 */
class Php7 extends \PhpParser\ParserAbstract
{
    protected $tokenToSymbolMapSize = 392;
    protected $actionTableSize = 1015;
    protected $gotoTableSize = 393;

    protected $invalidSymbol = 157;
    protected $errorSymbol = 1;
    protected $defaultAction = -32766;
    protected $unexpectedTokenRule = 32767;

    protected $YY2TBLSTATE  = 354;
    protected $YYNLSTATES   = 537;

    const YYERRTOK = 256;
    const T_INCLUDE = 257;
    const T_INCLUDE_ONCE = 258;
    const T_EVAL = 259;
    const T_REQUIRE = 260;
    const T_REQUIRE_ONCE = 261;
    const T_LOGICAL_OR = 262;
    const T_LOGICAL_XOR = 263;
    const T_LOGICAL_AND = 264;
    const T_PRINT = 265;
    const T_YIELD = 266;
    const T_YIELD_FROM = 267;
    const T_PLUS_EQUAL = 268;
    const T_MINUS_EQUAL = 269;
    const T_MUL_EQUAL = 270;
    const T_DIV_EQUAL = 271;
    const T_CONCAT_EQUAL = 272;
    const T_MOD_EQUAL = 273;
    const T_AND_EQUAL = 274;
    const T_OR_EQUAL = 275;
    const T_XOR_EQUAL = 276;
    const T_SL_EQUAL = 277;
    const T_SR_EQUAL = 278;
    const T_POW_EQUAL = 279;
    const T_COALESCE = 280;
    const T_BOOLEAN_OR = 281;
    const T_BOOLEAN_AND = 282;
    const T_IS_EQUAL = 283;
    const T_IS_NOT_EQUAL = 284;
    const T_IS_IDENTICAL = 285;
    const T_IS_NOT_IDENTICAL = 286;
    const T_SPACESHIP = 287;
    const T_IS_SMALLER_OR_EQUAL = 288;
    const T_IS_GREATER_OR_EQUAL = 289;
    const T_SL = 290;
    const T_SR = 291;
    const T_INSTANCEOF = 292;
    const T_INC = 293;
    const T_DEC = 294;
    const T_INT_CAST = 295;
    const T_DOUBLE_CAST = 296;
    const T_STRING_CAST = 297;
    const T_ARRAY_CAST = 298;
    const T_OBJECT_CAST = 299;
    const T_BOOL_CAST = 300;
    const T_UNSET_CAST = 301;
    const T_POW = 302;
    const T_NEW = 303;
    const T_CLONE = 304;
    const T_EXIT = 305;
    const T_IF = 306;
    const T_ELSEIF = 307;
    const T_ELSE = 308;
    const T_ENDIF = 309;
    const T_LNUMBER = 310;
    const T_DNUMBER = 311;
    const T_STRING = 312;
    const T_STRING_VARNAME = 313;
    const T_VARIABLE = 314;
    const T_NUM_STRING = 315;
    const T_INLINE_HTML = 316;
    const T_CHARACTER = 317;
    const T_BAD_CHARACTER = 318;
    const T_ENCAPSED_AND_WHITESPACE = 319;
    const T_CONSTANT_ENCAPSED_STRING = 320;
    const T_ECHO = 321;
    const T_DO = 322;
    const T_WHILE = 323;
    const T_ENDWHILE = 324;
    const T_FOR = 325;
    const T_ENDFOR = 326;
    const T_FOREACH = 327;
    const T_ENDFOREACH = 328;
    const T_DECLARE = 329;
    const T_ENDDECLARE = 330;
    const T_AS = 331;
    const T_SWITCH = 332;
    const T_ENDSWITCH = 333;
    const T_CASE = 334;
    const T_DEFAULT = 335;
    const T_BREAK = 336;
    const T_CONTINUE = 337;
    const T_GOTO = 338;
    const T_FUNCTION = 339;
    const T_CONST = 340;
    const T_RETURN = 341;
    const T_TRY = 342;
    const T_CATCH = 343;
    const T_FINALLY = 344;
    const T_THROW = 345;
    const T_USE = 346;
    const T_INSTEADOF = 347;
    const T_GLOBAL = 348;
    const T_STATIC = 349;
    const T_ABSTRACT = 350;
    const T_FINAL = 351;
    const T_PRIVATE = 352;
    const T_PROTECTED = 353;
    const T_PUBLIC = 354;
    const T_VAR = 355;
    const T_UNSET = 356;
    const T_ISSET = 357;
    const T_EMPTY = 358;
    const T_HALT_COMPILER = 359;
    const T_CLASS = 360;
    const T_TRAIT = 361;
    const T_INTERFACE = 362;
    const T_EXTENDS = 363;
    const T_IMPLEMENTS = 364;
    const T_OBJECT_OPERATOR = 365;
    const T_DOUBLE_ARROW = 366;
    const T_LIST = 367;
    const T_ARRAY = 368;
    const T_CALLABLE = 369;
    const T_CLASS_C = 370;
    const T_TRAIT_C = 371;
    const T_METHOD_C = 372;
    const T_FUNC_C = 373;
    const T_LINE = 374;
    const T_FILE = 375;
    const T_COMMENT = 376;
    const T_DOC_COMMENT = 377;
    const T_OPEN_TAG = 378;
    const T_OPEN_TAG_WITH_ECHO = 379;
    const T_CLOSE_TAG = 380;
    const T_WHITESPACE = 381;
    const T_START_HEREDOC = 382;
    const T_END_HEREDOC = 383;
    const T_DOLLAR_OPEN_CURLY_BRACES = 384;
    const T_CURLY_OPEN = 385;
    const T_PAAMAYIM_NEKUDOTAYIM = 386;
    const T_NAMESPACE = 387;
    const T_NS_C = 388;
    const T_DIR = 389;
    const T_NS_SEPARATOR = 390;
    const T_ELLIPSIS = 391;

    protected $symbolToName = array(
        "EOF",
        "error",
        "T_INCLUDE",
        "T_INCLUDE_ONCE",
        "T_EVAL",
        "T_REQUIRE",
        "T_REQUIRE_ONCE",
        "','",
        "T_LOGICAL_OR",
        "T_LOGICAL_XOR",
        "T_LOGICAL_AND",
        "T_PRINT",
        "T_YIELD",
        "T_YIELD_FROM",
        "'='",
        "T_PLUS_EQUAL",
        "T_MINUS_EQUAL",
        "T_MUL_EQUAL",
        "T_DIV_EQUAL",
        "T_CONCAT_EQUAL",
        "T_MOD_EQUAL",
        "T_AND_EQUAL",
        "T_OR_EQUAL",
        "T_XOR_EQUAL",
        "T_SL_EQUAL",
        "T_SR_EQUAL",
        "T_POW_EQUAL",
        "'?'",
        "':'",
        "T_COALESCE",
        "T_BOOLEAN_OR",
        "T_BOOLEAN_AND",
        "'|'",
        "'^'",
        "'&'",
        "T_IS_EQUAL",
        "T_IS_NOT_EQUAL",
        "T_IS_IDENTICAL",
        "T_IS_NOT_IDENTICAL",
        "T_SPACESHIP",
        "'<'",
        "T_IS_SMALLER_OR_EQUAL",
        "'>'",
        "T_IS_GREATER_OR_EQUAL",
        "T_SL",
        "T_SR",
        "'+'",
        "'-'",
        "'.'",
        "'*'",
        "'/'",
        "'%'",
        "'!'",
        "T_INSTANCEOF",
        "'~'",
        "T_INC",
        "T_DEC",
        "T_INT_CAST",
        "T_DOUBLE_CAST",
        "T_STRING_CAST",
        "T_ARRAY_CAST",
        "T_OBJECT_CAST",
        "T_BOOL_CAST",
        "T_UNSET_CAST",
        "'@'",
        "T_POW",
        "'['",
        "T_NEW",
        "T_CLONE",
        "T_EXIT",
        "T_IF",
        "T_ELSEIF",
        "T_ELSE",
        "T_ENDIF",
        "T_LNUMBER",
        "T_DNUMBER",
        "T_STRING",
        "T_STRING_VARNAME",
        "T_VARIABLE",
        "T_NUM_STRING",
        "T_INLINE_HTML",
        "T_ENCAPSED_AND_WHITESPACE",
        "T_CONSTANT_ENCAPSED_STRING",
        "T_ECHO",
        "T_DO",
        "T_WHILE",
        "T_ENDWHILE",
        "T_FOR",
        "T_ENDFOR",
        "T_FOREACH",
        "T_ENDFOREACH",
        "T_DECLARE",
        "T_ENDDECLARE",
        "T_AS",
        "T_SWITCH",
        "T_ENDSWITCH",
        "T_CASE",
        "T_DEFAULT",
        "T_BREAK",
        "T_CONTINUE",
        "T_GOTO",
        "T_FUNCTION",
        "T_CONST",
        "T_RETURN",
        "T_TRY",
        "T_CATCH",
        "T_FINALLY",
        "T_THROW",
        "T_USE",
        "T_INSTEADOF",
        "T_GLOBAL",
        "T_STATIC",
        "T_ABSTRACT",
        "T_FINAL",
        "T_PRIVATE",
        "T_PROTECTED",
        "T_PUBLIC",
        "T_VAR",
        "T_UNSET",
        "T_ISSET",
        "T_EMPTY",
        "T_HALT_COMPILER",
        "T_CLASS",
        "T_TRAIT",
        "T_INTERFACE",
        "T_EXTENDS",
        "T_IMPLEMENTS",
        "T_OBJECT_OPERATOR",
        "T_DOUBLE_ARROW",
        "T_LIST",
        "T_ARRAY",
        "T_CALLABLE",
        "T_CLASS_C",
        "T_TRAIT_C",
        "T_METHOD_C",
        "T_FUNC_C",
        "T_LINE",
        "T_FILE",
        "T_START_HEREDOC",
        "T_END_HEREDOC",
        "T_DOLLAR_OPEN_CURLY_BRACES",
        "T_CURLY_OPEN",
        "T_PAAMAYIM_NEKUDOTAYIM",
        "T_NAMESPACE",
        "T_NS_C",
        "T_DIR",
        "T_NS_SEPARATOR",
        "T_ELLIPSIS",
        "';'",
        "'{'",
        "'}'",
        "'('",
        "')'",
        "'`'",
        "']'",
        "'\"'",
        "'$'"
    );

    protected $tokenToSymbol = array(
            0,  157,  157,  157,  157,  157,  157,  157,  157,  157,
          157,  157,  157,  157,  157,  157,  157,  157,  157,  157,
          157,  157,  157,  157,  157,  157,  157,  157,  157,  157,
          157,  157,  157,   52,  155,  157,  156,   51,   34,  157,
          151,  152,   49,   46,    7,   47,   48,   50,  157,  157,
          157,  157,  157,  157,  157,  157,  157,  157,   28,  148,
           40,   14,   42,   27,   64,  157,  157,  157,  157,  157,
          157,  157,  157,  157,  157,  157,  157,  157,  157,  157,
          157,  157,  157,  157,  157,  157,  157,  157,  157,  157,
          157,   66,  157,  154,   33,  157,  153,  157,  157,  157,
          157,  157,  157,  157,  157,  157,  157,  157,  157,  157,
          157,  157,  157,  157,  157,  157,  157,  157,  157,  157,
          157,  157,  157,  149,   32,  150,   54,  157,  157,  157,
          157,  157,  157,  157,  157,  157,  157,  157,  157,  157,
          157,  157,  157,  157,  157,  157,  157,  157,  157,  157,
          157,  157,  157,  157,  157,  157,  157,  157,  157,  157,
          157,  157,  157,  157,  157,  157,  157,  157,  157,  157,
          157,  157,  157,  157,  157,  157,  157,  157,  157,  157,
          157,  157,  157,  157,  157,  157,  157,  157,  157,  157,
          157,  157,  157,  157,  157,  157,  157,  157,  157,  157,
          157,  157,  157,  157,  157,  157,  157,  157,  157,  157,
          157,  157,  157,  157,  157,  157,  157,  157,  157,  157,
          157,  157,  157,  157,  157,  157,  157,  157,  157,  157,
          157,  157,  157,  157,  157,  157,  157,  157,  157,  157,
          157,  157,  157,  157,  157,  157,  157,  157,  157,  157,
          157,  157,  157,  157,  157,  157,    1,    2,    3,    4,
            5,    6,    8,    9,   10,   11,   12,   13,   15,   16,
           17,   18,   19,   20,   21,   22,   23,   24,   25,   26,
           29,   30,   31,   35,   36,   37,   38,   39,   41,   43,
           44,   45,   53,   55,   56,   57,   58,   59,   60,   61,
           62,   63,   65,   67,   68,   69,   70,   71,   72,   73,
           74,   75,   76,   77,   78,   79,   80,  157,  157,   81,
           82,   83,   84,   85,   86,   87,   88,   89,   90,   91,
           92,   93,   94,   95,   96,   97,   98,   99,  100,  101,
          102,  103,  104,  105,  106,  107,  108,  109,  110,  111,
          112,  113,  114,  115,  116,  117,  118,  119,  120,  121,
          122,  123,  124,  125,  126,  127,  128,  129,  130,  131,
          132,  133,  134,  135,  136,  137,  157,  157,  157,  157,
          157,  157,  138,  139,  140,  141,  142,  143,  144,  145,
          146,  147
    );

    protected $action = array(
          674,   60,   61,  342,   62,   63,-32766,-32766,-32766,  357,
           64,   65,   66,  464, -190, -190, -190,  136,  987,-32766,
        -32766,-32766, -447,-32766,    0,-32766,-32766,-32766,-32766,-32766,
        -32766,-32766,-32766,-32767,-32767,-32767,-32767,-32767,-32766,-32766,
        -32766,-32766,-32766,-32766,-32766,   67,   68,  997,  648,  999,
          998,   69,  227,   70,  221,  222,   71,   72,   73,   74,
           75,   76,   77,   78,  648,   40,  235,   79,  334,  343,
        -32766,-32766,-32766,  921,  922,  379,  936,  956,  488,  663,
          228,  920,   51,   27,  344, -405,  380,-32766,  381,-32766,
          382,-32766,-32766,  345,-32766,-32766,-32766,   52,   53,  383,
          346,  994,   54,  384,  349, -194,   80,  648,-32766,  287,
          290,  385,  386,-32766,  128,-32766,-32766,  387,  388,  389,
          956,  690,  390,  391,  271,-32766,-32766,-32766,  392,  393,
          358,  926,  927,  928,  929,  923,  924,  244,  254, -188,
         -188, -188,  402,  930,  925,  347, -405,  669,  509,   43,
           55,  956,  255,  648,  256,  273,  541,  542,  543,  544,
          545, -405,  546,  547,  548,  584,  585, -447, -405, -447,
         -408,-32766,-32766,-32766,  648,  392,   46,  112,  113,  114,
          115,  116,  117,  118,  119,  120,  121,  122,  123,  648,
        -32766,  133,-32766,-32766,-32766,-32766,-32766,-32766,  273,   33,
          108,  109,  110,  649,  241,  267,  288,  549,  792,  793,
          794,  791,  790,  789,  784,  376,  111,  822,  824,-32766,
          242,  550,  551,  552,  553,  554,  555,  556, -404,  273,
          607, -438,   57,  308,-32766,-32766,-32766,  557,  558,  559,
          560,  561,  562,  563,  564,  565,  566,  567,  587,  588,
          589,  590,  591,  579,  580,  581,  582,  583,  568,  569,
          570,  571,  572,  573,  574,  601,  602,  603,  604,  605,
          606,  575,  576,  577,  578,-32766,  599,  597,  598,  594,
          595,  626,  365,  586,  592,  593,  742,  743,-32766, -404,
          105,  106,  107,  257,  609,   44,  224,  596,-32766,  402,
          129,-32766,-32766,-32766, -404,-32766,  130,-32766,  225,-32766,
          140, -404,-32766, -246,  335,  125,-32766,-32766,-32766,  349,
          253,-32766,-32766, -217,  360,-32766,  742,  743,-32766,  401,
        -32766,-32766,  276,  615,  718,   40,-32766,-32766,  141,  402,
        -32766,-32766,-32766,-32766,-32766,  609, -448,  956, -199,-32766,
          609,  920,-32766,-32766,-32766,  269,  765,-32766,-32766,-32766,
          880,-32766,  618,-32766,  341,-32766,-32766,-32766,-32766,-32766,
          909, -144,-32766,-32766,-32766,  349, -438,-32766,-32766, -143,
          899,-32766,  225,  498,-32766,  401,-32766,-32766, -180, -180,
         -180,  135,-32766,  444,  521,  139,-32766,-32766,-32766,  393,
        -32767,-32767,-32767,-32767,  103,  104,  105,  106,  107,  336,
           39,  217,  402,  987,  648,  347, -406,-32766,-32766,  359,
           81,  132,-32766,-32766,  609,  273,  748,   22,-32766,-32766,
          291,-32766,-32766,-32766,  969,-32766,  259,-32766,-32766,-32766,
          880,  505,-32766, -180,-32766,-32766,-32766,-32766,-32766,  349,
          499,-32766,-32766,  347,  719,-32766,  131,  770,-32766,  401,
        -32766,-32766,-32766,-32766,-32766,  661,-32766,  349, -217,  512,
        -32766,-32766,-32766,   -1,  648,  623,  624, -406,-32766,-32766,
          124,-32766,  241,-32766,-32766,-32766,-32766,  935,-32766,-32766,
        -32766, -448, -406, -448,  934,  132,-32766,-32766,-32766, -406,
          137, -409,  673,-32766,  609,   34,  496,  134,-32766,  892,
          609,-32766,-32766,-32766,  880,-32766, -144,-32766,  683,-32766,
          339,  525,-32766,  111, -143,  215,-32766,-32766,-32766,  349,
          353,-32766,-32766,  511, -404,-32766,  218,  648,-32766,  401,
        -32766,-32766,  349, -179, -179, -179,-32766,   59,  530, -195,
        -32766,-32766,-32766,-32766,-32766,  749,  972,  138,  299,-32766,
          622,  478,  479,-32766,-32766,-32766,  370,  472,  648,  648,
          880,  660,-32766,  769,  529,  335,-32766,-32766,  609,   58,
          347,  253,-32766,  367,   28,-32766,-32766,-32766,  243,-32766,
          514,-32766,  648,-32766,  615, -404,-32766,  677, -179,  235,
        -32766,-32766,-32766,  349,  484,-32766,-32766,  648,  258,-32766,
         -404,  648,-32766,  401,-32766,-32766,  269, -404,  781,  536,
        -32766,  686,  436,  298,-32766,-32766,-32766,  481,-32766,  427,
          127,  648,  422,-32766,  609,  318,  519,  421,-32766,  354,
          883,-32766,-32766,-32766,  880,-32766,  766,-32766,  352,-32766,
        -32766,-32766,-32766,  616,  516,  506,-32766,-32766,-32766,  349,
          882,-32766,-32766,  349,  632,-32766,  223,  533,-32766,  401,
        -32766,-32766,  648,  992,-32766,-32766,-32766,  335,  630,  437,
        -32766,-32766,-32766,  253,-32766,-32766,-32766,  610,  895,-32766,
          792,  793,  794,  791,  790,  789,  615,  491,  648,  497,
          880,  679,-32766,  426,  275,  274,-32766,-32766,  609,  987,
          -70,  356,-32766,  458,  351,-32766,-32766,-32766,  269,-32766,
          526,-32766,  226,-32766,  214,  617,-32766,  782,   37,  439,
        -32766,-32766,-32766,  349,  374,-32766,-32766,  475,  467,-32766,
          349,  270,-32766,  401,-32766,-32766,  476,  265,  933,  268,
        -32766,-32766,-32766,  266,-32766,-32766,-32766,   47,-32766,-32766,
         -363,-32766,-32766,-32766,  609,  126,  691,  692,-32766,  991,
          880,-32766,-32766,-32766,    0,-32766,  392,-32766,  774,-32766,
        -32766,-32766,-32766,  297,  996,    0,-32766,-32766,-32766,  349,
           30,-32766,-32766,  349,   36,-32766,  402,  311,-32766,  401,
        -32766,-32766,  353,-32766,-32766,-32766,-32766,  339,  323,  432,
        -32766,-32766,-32766,  685,-32766,-32766,-32766,  704,   49,   50,
          517,  518,  659,  702,  657,  672,  658,  653,-32766,  775,
          665,  776,  620,  662,  609,  773,-32766,-32766,-32766,  777,
          689,-32766,-32766,-32766,  721,-32766,  706,-32766,  656,-32766,
          664,  671,-32766,  619,  712,  713,-32766,-32766,-32766,  349,
          651,-32766,-32766,  252,  286,-32766,-32766,  534,-32766,  401,
        -32766,-32766,  532,  510,  531,  528,-32766,-32766,-32766,-32766,
        -32766,-32766,-32766,   84,  523,  515,  522,  520,  535,   85,
           86,   87,  970,  967,  962,  950,-32766,  957,-32766,-32766,
        -32766,  625,  993,  688,  995,  687,-32766,-32766,   45,  888,
           88,   89,   90,   91,   92,   93,   94,   95,   96,   97,
           98,   99,  100,  101,  102,  103,  104,  105,  106,  107,
          108,  109,  110,  710,  241,-32766,  711,  248,   38, -407,
         -409,  609, -429, -408,   41,-32766,  111,   83,-32766,-32766,
        -32766,  338,-32766,  333,-32766,  272,-32766,  240,  239,-32766,
          238,  237,  220,-32766,-32766,-32766,  349,  219,-32766,-32766,
          216,   42,-32766,   82,   56,-32766,  401,-32766,-32766,   48,
         -431,  961,  453,-32766,  884,  862,  861,-32766,-32766,-32766,
         -196,  459,  750,  918,  885,  503,  377,  373,  371,  368,
           25,   24,   23, -195,    0,  878,    0,  949,  948,  919,
          482,    0,    0,-32766,-32766
    );

    protected $actionCheck = array(
            1,    2,    3,    4,    5,    6,    8,    9,   10,   28,
           11,   12,   13,   86,   71,   72,   73,   66,   81,    8,
            9,   10,    7,   66,    0,   27,    8,   29,   30,   31,
           32,   33,   34,   35,   36,   37,   38,   39,   27,   82,
           29,   30,   31,   32,   33,   46,   47,   76,  121,   78,
           79,   52,    7,   54,   55,   56,   57,   58,   59,   60,
           61,   62,   63,   64,  121,   66,   67,   68,   69,   70,
            8,    9,   10,   74,   75,   76,  139,   78,   92,   80,
           34,   82,   83,   84,   85,   66,   87,  130,   89,   27,
           91,   29,   30,   94,    8,    9,   10,   98,   99,  100,
          101,  150,  103,  104,  101,   73,  107,  121,  151,  110,
          111,  112,  113,   27,    7,  112,  113,  118,  119,  120,
           78,  122,  123,  124,    7,  122,  123,  124,  129,  130,
          149,  132,  133,  134,  135,  136,  137,  138,    7,   71,
           72,   73,  143,  144,  145,  146,  127,  148,  149,    7,
          151,   78,  153,  121,  155,  156,    2,    3,    4,    5,
            6,  142,    8,    9,   10,   11,   12,  152,  149,  154,
          151,    8,    9,   10,  121,  129,   14,   15,   16,   17,
           18,   19,   20,   21,   22,   23,   24,   25,   26,  121,
           27,  149,   29,   30,   31,   32,   33,   34,  156,  102,
           49,   50,   51,  150,   53,  108,    7,   53,  111,  112,
          113,  114,  115,  116,  117,    7,   65,   55,   56,    1,
            7,   67,   68,   69,   70,   71,   72,   73,   66,  156,
           76,    7,   66,   78,    8,    9,   10,   83,   84,   85,
           86,   87,   88,   89,   90,   91,   92,   93,   94,   95,
           96,   97,   98,   99,  100,  101,  102,  103,  104,  105,
          106,  107,  108,  109,  110,  111,  112,  113,  114,  115,
          116,  117,  118,  119,  120,    1,  122,  123,  124,  125,
          126,  150,    7,  129,  130,  131,  130,  131,   70,  127,
           46,   47,   48,  127,   76,  140,  141,  143,   80,  143,
           14,   83,   84,   85,  142,   87,   14,   89,   34,   91,
           14,  149,   94,   78,  102,  149,   98,   99,  100,  101,
          108,  103,  104,    7,    7,  107,  130,  131,  110,  111,
          112,  113,   66,  121,   28,   66,  118,  102,   14,  143,
          122,  123,  124,  108,   70,   76,    7,   78,  152,    1,
           76,   82,  117,   66,   80,  143,  148,   83,   84,   85,
           12,   87,  150,   89,    7,   91,  148,  149,   94,   82,
          152,    7,   98,   99,  100,  101,  152,  103,  104,    7,
          111,  107,   34,   76,  110,  111,  112,  113,   95,   96,
           97,   14,  118,  127,   28,   14,  122,  123,  124,  130,
           40,   41,   42,   43,   44,   45,   46,   47,   48,  122,
            7,    7,  143,   81,  121,  146,   66,  130,   70,    7,
          151,  147,  148,  149,   76,  156,  152,  152,   80,    1,
            7,   83,   84,   85,   76,   87,   81,   89,  151,   91,
           12,   88,   94,  150,    8,    9,   98,   99,  100,  101,
          143,  103,  104,  146,  148,  107,   28,  150,  110,  111,
          112,  113,    8,    9,   10,  148,  118,  101,  152,   28,
          122,  123,  124,    0,  121,  101,  102,  127,  112,  113,
           14,   27,   53,   29,   30,   31,   32,  155,  122,  123,
          124,  152,  142,  154,  139,  147,  148,  149,   70,  149,
           28,  151,   28,    1,   76,    7,   90,  149,   80,  152,
           76,   83,   84,   85,   12,   87,  152,   89,   34,   91,
          146,   28,   94,   65,  152,  128,   98,   99,  100,  101,
          146,  103,  104,  149,   66,  107,   34,  121,  110,  111,
          112,  113,  101,   95,   96,   97,  118,   66,   28,  152,
          122,  123,  124,  112,  113,  152,  152,   96,   97,    1,
          148,  105,  106,  122,  123,  124,   71,   72,  121,  121,
           12,  148,   70,  148,  149,  102,  148,  149,   76,   66,
          146,  108,   80,   71,   72,   83,   84,   85,   28,   87,
           28,   89,  121,   91,  121,  127,   94,  150,  150,   67,
           98,   99,  100,  101,   73,  103,  104,  121,  127,  107,
          142,  121,  110,  111,  112,  113,  143,  149,  148,  149,
          118,  150,   76,  142,  122,  123,  124,   78,   70,   76,
          149,  121,   76,    1,   76,   77,  150,   76,   80,   76,
          150,   83,   84,   85,   12,   87,  148,   89,   76,   91,
          148,  149,   94,  148,  149,   76,   98,   99,  100,  101,
          150,  103,  104,  101,   76,  107,   34,   28,  110,  111,
          112,  113,  121,   76,  112,  113,  118,  102,   76,   76,
          122,  123,  124,  108,  122,  123,  124,   76,   78,    1,
          111,  112,  113,  114,  115,  116,  121,   78,  121,   78,
           12,  150,   70,   78,   81,   81,  148,  149,   76,   81,
           93,   85,   80,   93,  101,   83,   84,   85,  143,   87,
           28,   89,   34,   91,   93,  150,   94,  150,   93,   93,
           98,   99,  100,  101,  101,  103,  104,   95,   95,  107,
          101,  125,  110,  111,  112,  113,  108,  125,  139,  109,
          118,  112,  113,  126,  122,  123,  124,  128,   70,    1,
          142,  122,  123,  124,   76,  128,  122,  122,   80,  154,
           12,   83,   84,   85,   -1,   87,  129,   89,  148,   91,
          148,  149,   94,  142,  150,   -1,   98,   99,  100,  101,
          142,  103,  104,  101,  142,  107,  143,  146,  110,  111,
          112,  113,  146,  146,  112,  113,  118,  146,  146,  146,
          122,  123,  124,  147,  122,  123,  124,  148,  148,  148,
          148,  148,  148,  148,  148,  148,  148,  148,   70,  148,
          148,  148,  148,  148,   76,  148,  148,  149,   80,  148,
          150,   83,   84,   85,  148,   87,  148,   89,  148,   91,
          148,  148,   94,  148,  148,  148,   98,   99,  100,  101,
          148,  103,  104,  149,  149,  107,    1,  149,  110,  111,
          112,  113,  149,  149,  149,  149,  118,    8,    9,   10,
          122,  123,  124,  149,  149,  149,  149,  149,  149,    8,
            9,   10,  150,  150,  150,  150,   27,  150,   29,   30,
           31,  150,  150,  150,  150,  150,  148,  149,   27,  150,
           29,   30,   31,   32,   33,   34,   35,   36,   37,   38,
           39,   40,   41,   42,   43,   44,   45,   46,   47,   48,
           49,   50,   51,  150,   53,   70,  150,  152,  151,  151,
          151,   76,  151,  151,  151,   80,   65,  151,   83,   84,
           85,  151,   87,  151,   89,  151,   91,  151,  151,   94,
          151,  151,  151,   98,   99,  100,  101,  151,  103,  104,
          151,  151,  107,  151,  151,  110,  111,  112,  113,  151,
          151,  154,  152,  118,  152,  152,  152,  122,  123,  124,
          152,  152,  152,  152,  152,  152,  152,  152,  152,  152,
          152,  152,  152,  152,   -1,  153,   -1,  154,  154,  154,
          154,   -1,   -1,  148,  149
    );

    protected $actionBase = array(
            0,  293,  448,  473,  212,   68,  575,  -57,   53,  486,
          -73,  -14,   32,  416,  551,  471,  510,  353,  490,  447,
          577,  562,  366,  692,  639,  692,  441,    3,    3,    3,
           42,  307,  681,  154,  154,  154,  154,  579,  274,  348,
          632,  632,  218,  632,  558,  428,  502,  688,  758,  758,
          758,  758,  758,  758,  758,  865,  865,  758,  758,  758,
          758,  758,  758,  758,  758,  758,  758,  758,  758,  758,
          758,  758,  758,  758,  758,  758,  758,  758,  758,  758,
          758,  758,  758,  758,  758,  758,  758,  758,  758,  758,
          758,  758,  758,  758,  758,  758,  758,  758,  758,  758,
          758,  758,  758,  758,  758,  758,  758,  758,  758,  758,
          758,  758,  758,  758,  758,  758,  758,  758,  758,  758,
          758,  758,  758,  758,  758,  758,  758,  758,  758,  758,
          758,  758,  758,  758,  758,  758,  758,  758,  758,  758,
          758,  758,  306,  702,  637,  629,  703,  785,  832,  830,
          631,  833,  752,  747,  472,  745,  744,  743,  742,  856,
          881,  881,  881,  881,  881,  881,  881,  881,  881,  881,
          881,  881,  881,  881,  881,  881,  881,   18,  436,  226,
          226,  226,  226,  226,  226,  226,  226,  226,  226,  226,
          226,  226,  226,  226,  226,  226,   86,   86,   86,   62,
          869,  454,   11,  162,  163,   -2,   -2,   -2,   -2,   -2,
          360,  360,  360,  360,   46,   46,  647,  647,  532,  269,
          269,  269,  269,  269,  269,  269,  269,  269,  269,  690,
          753,  755,  759,  244,  244,  287,  235,  196,  196,  196,
          196,  -43,  156,  156,  355,  -63,  332,  350,   19,  151,
          151,  151,  374,  374,  374,  624,  623,  358,  358,  609,
          628,  468,  468,  481,  468,  653,  653,  653,  653,  384,
          653,  653,  653,  734,  155,  155,  -29,  643,  783,  642,
          786,  425,  166,  339,   15,  661,  661,   73,  661,  661,
          613,   73,  512,  495,  456,  618,  -19,   73,   73,  306,
          470,  429,  685,  603,  412,  705,  423,  317,  266,  505,
          275,  714,  684,  839,  372,  834,  224,  404,  -49,  429,
          429,  429,  403,  715,  316,  397,  131,  364,  751,  498,
          208,  357,  687,  484,  820,  556,  787,  787,  546,  657,
          549,  484,  823,  823,  823,  823,  484,  657,  787,  484,
          142,  484,  622,  657,  616,  616,  823,  672,  673,  556,
          625,  627,  787,  787,  627,  546,  484,  823,  638,  666,
          823,  560,  560,  638,  484,  560,  549,  560,   24,  474,
          828,  822,  800,  561,  724,  644,  645,  816,  811,  796,
          553,  572,  819,  793,  663,  674,  563,  466,  648,  513,
          788,  613,  656,  458,  458,  458,  513,  789,  458,  458,
          458,  458,  458,  458,  458,  458,  855,  641,  626,  700,
          676,  677,  286,  678,  651,  636,  292,  736,  663,  663,
          842,  852,  611,  810,  670,  107,  377,  809,  620,  602,
          662,  807,  738,  841,  597,  634,  663,  458,  840,  791,
          829,  854,  853,  792,  827,  679,  847,  213,  588,  682,
          117,  615,  737,  735,  696,  671,  850,  706,  846,  845,
          633,  117,  493,  531,  838,  707,  802,  619,  804,  726,
          381,  296,  754,  520,  712,  849,  848,  851,  698,  725,
          723,  324,  610,  621,  718,  806,  669,  843,  617,  656,
          652,  640,  635,  739,  844,  675,  683,  691,  630,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,  154,  154,  154,
            0,    0,    0,    0,  154,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  881,
          881,  881,  881,  881,  881,  881,  881,  881,  881,  881,
          881,  881,  881,  881,  881,  881,  881,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,  881,  881,  881,  881,  881,  881,
          881,  881,  881,  881,  881,  881,  881,  881,  881,  881,
          881,  881,  881,  881,  881,  881,  881,  881,  881,  881,
            0,  881,  881,  881,  881,  881,  881,  151,  151,  151,
          151,  269,  269,  269,  269,  269,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,   97,   97,   97,   97,
          151,  151,  269,   97,  434,  434,  434,  434,  269,  434,
          434,  155,  155,  155,    0,    0,    0,    0,    0,  434,
          434,  434,  155,  155,   73,   73,  155,  155,    0,    0,
            0,    0,  434,  434,  434,  434,  434,  434,  434,  434,
           73,    0,    0,    0,  461,  461,  461,  461,  117,    0,
            0,    0,  434,  434,    0,  434,  434,  625,    0,    0,
            0,    0,  787,    0,    0,    0,    0,    0,  458,  107,
          810,    0,  199,    0,    0,    0,    0,    0,  611,  199,
           45,    0,   45,    0,    0,    0,  458,  458,  458,    0,
          611,    0,    0,    0,    0,  199,    0,    0,    0,  117,
            0,    0,    0,    0,    0,    0,  434,    0,    0,    0,
            0,    0,    0,    0,  434,    0,    0,    0,    0,    0,
          434
    );

    protected $actionDefault = array(
            3,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
          441,  441,32767,  401,32767,32767,32767,32767,  264,  264,
          264,32767,  402,  402,  402,32767,32767,  402,  402,  402,
        32767,32767,32767,32767,32767,  343,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,  349,  446,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
          326,  327,  329,  330,  263,  403,  216,  350,  445,  262,
          102,  225,  218,  172,  105,  261,  203,  291,  293,  342,
          344,  292,  268,  273,  274,  275,  276,  277,  278,  279,
          280,  281,  282,  283,  284,  267,  323,  322,  321,  289,
          290,  294,  296,  266,  295,  312,  313,  310,  311,  314,
          315,  316,  317,  318,32767,32767,  440,  440,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,  248,
          248,  248,  248,  303,  304,32767,  249,  207,  207,  207,
          207,32767,  207,32767,32767,32767,32767,  394,  347,  298,
          299,  297,32767,32767,32767,  374,32767,32767,32767,32767,
          376,  286,  288,  368,  269,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,  375,32767,32767,32767,32767,32767,
        32767,32767,  370,  404,  404,32767,32767,32767,32767,32767,
          362,32767,  191,  193,  141,  379,32767,32767,32767,32767,
        32767,  308,32767,32767,32767,32767,32767,32767,  453,32767,
        32767,32767,32767,32767,  404,32767,  404,32767,32767,  300,
          301,  302,32767,32767,  404,  404,32767,  404,32767,32767,
        32767,32767,32767,  145,  371,32767,  377,  377,32767,32767,
        32767,  145,32767,32767,32767,32767,  145,32767,32767,  145,
          400,  145,  158,32767,  156,  156,32767,  177,  177,32767,
        32767,  160,32767,  418,  160,32767,  145,32767,  354,  147,
        32767,  209,  209,  354,  145,  209,32767,  209,32767,   72,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,  364,32767,32767,32767,32767,  395,
          416,  362,32767,  306,  307,  309,32767,  406,  331,  332,
          333,  334,  335,  336,  337,  339,32767,  367,32767,32767,
        32767,32767,32767,32767,   74,   92,  224,32767,   74,  365,
        32767,32767,32767,32767,32767,  265,32767,32767,   94,32767,
           74,32767,32767,32767,32767,  404,  366,  305,32767,  380,
          422,32767,32767,  405,32767,32767,32767,  198,32767,32767,
          159,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,  161,32767,32767,  404,32767,32767,32767,32767,32767,
        32767,  260,32767,32767,32767,32767,32767,  404,32767,32767,
        32767,  202,32767,32767,32767,32767,32767,32767,   72,   59,
        32767,  242,32767,32767,32767,32767,32767,32767,32767,  107,
          107,    3,  107,  185,  107,  227,    3,  177,  177,  138,
          227,  107,  227,  227,  107,  107,  107,  107,  107,  234,
          107,  107,  107,  107,  107,  107,  107
    );

    protected $goto = array(
          166,  166,  145,  145,  148,  145,  152,  154,  182,  168,
          164,  164,  164,  164,  165,  165,  165,  147,  148,  165,
          165,  165,  160,  161,  162,  163,  179,  144,  180,  403,
          404,  301,  405,  408,  409,  410,  411,  412,  413,  414,
          415,  809,  146,  149,  150,  151,  153,  177,  178,  181,
          196,  199,  200,  201,  202,  204,  205,  206,  207,  208,
          209,  210,  211,  212,  213,  233,  234,  249,  250,  251,
          319,  320,  321,  447,  183,  184,  185,  186,  187,  188,
          189,  190,  191,  192,  193,  194,  195,  155,  167,  156,
          169,  170,  171,  197,  172,  157,  158,  173,  159,  198,
          142,  174,  175,  176,  500,    9,  278,    5,  230,   10,
          231,  232,  449,  780,  508,  309,   11,  495,  778,    1,
           12,   13,    2,   14,  450,    7,   15,   16,   17,   18,
           19,   20,  325,  487,  316,  316,  264,  314,  314,  261,
          262,  283,  445,  324,  284,  327,  474,  406,  406,  406,
          406,  406,  406,  406,  406,  406,  406,  406,  406,  406,
          406,  406,  407,  407,  407,  407,  407,  407,  407,  407,
          407,  407,  407,  407,  407,  407,  407,  612,  612,   32,
          612,  490,  896,  910,  494,  438,  300,  428,  424,  428,
          667,  865,   26,   21,  296,  720,  705,  703,  701,  703,
          513,  418,  729,  724,  428,  455,  635,  640,  635,    4,
          303,  986,  986,  433,    6,  441,   29,  465,  485,  483,
          440,  428,  507,  428,  428,  989,  986,  448,  420,  423,
          369,  430,  451,  452,  454,  897,  613,  613,   35,  613,
          989,  989,  627,  636,  430,  430,  468,  469,  504,  898,
          952,  734,  734,  976,  976,  614,  614,  417,  614,  471,
          281,  332,  752,  417,  980,  279,  280,  260,  246,  312,
          328,  443,  486,  302,  428,  973,  315,  807,  738,  856,
          285,  963,  429,  747,  633,  756,  524,  889,  446,  364,
          894,  637,  463,  375,  708,  796,  759,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,  900,    0,
          741,  741,  741,  741,  900,  741,  741,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,  960,
            0,    0,    0,    0,    0,  960,    0,    0,  699,  699,
          699,  699,    0,  694,  700,  493,    0,    0,    0,    0,
            0,  971,  971,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,  958,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,  788,    0,
            0,  758,    0,    0,    0,  758,    0,    0,    0,    0,
            0,  964,  965
    );

    protected $gotoCheck = array(
           20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
           20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
           20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
           20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
           20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
           20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
           20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
           20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
           20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
           20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
           20,   20,   20,   20,   48,   23,   60,   23,   56,   23,
           56,   56,    6,    6,    6,    8,   23,    6,    6,   23,
           23,   23,   23,   23,   74,   23,   23,   23,   23,   23,
           23,   23,   42,   42,   42,   42,   42,   42,   42,   42,
           42,   42,   42,   42,   42,   42,   42,  107,  107,  107,
          107,  107,  107,  107,  107,  107,  107,  107,  107,  107,
          107,  107,  108,  108,  108,  108,  108,  108,  108,  108,
          108,  108,  108,  108,  108,  108,  108,    9,    9,   86,
            9,   52,   70,   25,   52,    8,   52,    7,    7,    7,
           41,   25,   25,   25,   25,    9,    9,    9,    9,    9,
            9,    9,    9,    9,    7,   25,   17,   22,   17,    2,
           49,  118,  118,   49,    2,   49,   25,   31,   31,   25,
            7,    7,    4,    7,    7,  118,  118,   35,   34,   34,
           49,   35,   34,   34,   34,   70,   10,   10,   49,   10,
          118,  118,   17,   17,   35,   35,   51,   51,   51,   70,
           70,   65,   65,   65,   65,   11,   11,  103,   11,   58,
           58,   58,   72,  103,  117,   60,   60,  106,  106,   12,
           12,  109,   40,   38,    7,  115,   39,   89,   67,   90,
           13,  112,    7,   69,   18,   73,   62,   96,    7,   54,
           98,   19,   55,   94,   59,   88,   75,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   48,   -1,
           48,   48,   48,   48,   48,   48,   48,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   74,
           -1,   -1,   -1,   -1,   -1,   74,   -1,   -1,   48,   48,
           48,   48,   -1,   48,   48,   48,   -1,   -1,   -1,   -1,
           -1,   74,   74,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   74,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   86,   -1,
           -1,   74,   -1,   -1,   -1,   74,   -1,   -1,   -1,   -1,
           -1,   74,   74
    );

    protected $gotoBase = array(
            0,    0, -302,    0,  185,    0,   82,  -65, -154,  174,
          233,  252,  -16,   27,    0,    0,    0,  -46,   30,  -68,
          -38,    0,  173, -405,    0, -151,    0,    0,    0,    0,
            0,  168,    0,    0,  175,  189,    0,    0,  222,   56,
           57,  165,  -82,    0,    0,    0,    0,    0,   73, -136,
            0,    8, -191,    0,  -66,  -72, -412,    0,   -7,  -71,
         -252,    0,  -13,    0,    0,   37,    0,   36,    0,   40,
         -113,    0,  223,   -6,   94,  -64,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,  142,    0,  -81,   59,
           38,    0,    0,    0,  -80,    0,  -50,    0,  -51,    0,
            0,    0,    0,   22,    0,    0,   12,  -67,  -52,  230,
            0,    0,   23,    0,    0,   58,    0,  221,  -34,    0
    );

    protected $gotoDefault = array(
        -32768,  378,    3,  539,  600,  608,  480,  394,  425,  645,
          646,  647,  305,  289,  621,  304,  326,  628,  634,  638,
          143,  329,  641,    8,  643,  857,  292,  650,  293,  473,
          652,  434,  654,  655,  419,  395,  306,  307,  435,  313,
          466,  666,  203,  310,  668,  294,  670,  676,  295,  492,
          477,  456,  489,  396,  361,  462,  229,  442,  460,  707,
          277,  715,  527,  723,  726,  397,  457,  737,  366,  745,
          915,  322,  751,  757,  947,  760,  763,  340,  330,  470,
          767,  768,   31,  772,  501,  502,  787,  236,  795,  808,
          337,  875,  877,  431,  372,  890,  355,  331,  893,  951,
          348,  398,  362,  906,  263,  282,  245,  399,  247,  416,
          979,  400,  363,  954,  317,  974,  350,  981,  988,  461
    );

    protected $ruleToNonTerminal = array(
            0,    1,    2,    2,    4,    4,    4,    4,    4,    4,
            4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
            4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
            4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
            4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
            4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
            4,    4,    4,    5,    5,    5,    5,    5,    5,    5,
            6,    6,    7,    7,    8,    3,    3,    3,    3,    3,
            3,    3,    3,    3,    3,    3,   13,   13,   14,   14,
           12,   12,   17,   17,   17,   17,   16,   16,   18,   18,
           15,   15,   19,   21,   21,   22,   23,   23,   24,   24,
           24,   24,    9,    9,    9,    9,    9,    9,    9,    9,
            9,    9,    9,    9,    9,    9,    9,    9,    9,    9,
            9,    9,    9,    9,    9,    9,    9,    9,   45,   45,
           47,   46,   46,   39,   39,   49,   49,   50,   50,   10,
           11,   11,   11,   53,   53,   53,   54,   54,   57,   57,
           55,   55,   58,   58,   32,   32,   41,   41,   44,   44,
           43,   43,   59,   33,   33,   33,   33,   60,   60,   61,
           61,   62,   62,   30,   30,   26,   26,   63,   28,   28,
           64,   27,   27,   29,   29,   40,   40,   40,   51,   51,
           66,   66,   67,   67,   69,   69,   69,   68,   68,   52,
           52,   70,   70,   70,   71,   71,   72,   72,   72,   36,
           36,   73,   37,   37,   75,   75,   56,   56,   76,   76,
           76,   76,   81,   81,   82,   82,   83,   83,   83,   83,
           83,   84,   85,   85,   80,   80,   77,   77,   79,   79,
           87,   87,   86,   86,   86,   86,   86,   86,   78,   78,
           88,   88,   38,   38,   31,   31,   20,   20,   20,   20,
           20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
           20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
           20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
           20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
           20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
           20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
           20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
           20,   20,   20,   20,   20,   20,   20,   25,   25,   35,
           35,   95,   89,   89,   94,   94,   97,   97,   98,   99,
           99,   99,  103,  103,   48,   48,   48,   90,   90,  101,
          101,   91,   91,   91,   93,   93,   93,   96,   96,  107,
          107,  108,  108,  108,   92,   92,   92,   92,   92,   92,
           92,   92,   92,   92,   92,   92,   92,   92,   92,   92,
          110,  110,   34,   34,  105,  105,  105,  100,  100,  100,
          111,  111,  111,  111,  111,  111,   42,   42,   42,   74,
           74,   74,  113,  104,  104,  104,  104,  104,  104,  102,
          102,  102,  112,  112,  112,   65,  114,  114,  115,  115,
          115,  109,  109,  116,  116,  117,  117,  117,  117,  106,
          106,  106,  106,  118,  118,  118,  118,  118,  118,  118,
          119,  119,  119
    );

    protected $ruleToLength = array(
            1,    1,    2,    0,    1,    1,    1,    1,    1,    1,
            1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
            1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
            1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
            1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
            1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
            1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
            1,    1,    1,    3,    1,    1,    1,    1,    1,    3,
            5,    4,    3,    4,    1,    3,    1,    1,    7,    6,
            3,    1,    1,    3,    2,    4,    3,    1,    1,    2,
            3,    1,    3,    3,    1,    3,    2,    0,    1,    1,
            1,    1,    3,    5,    8,    3,    5,    9,    3,    3,
            3,    3,    2,    3,    3,    3,    1,    2,    5,    7,
            9,    5,    1,    6,    3,    3,    2,    1,    0,    2,
            8,    0,    4,    1,    3,    0,    1,    0,    1,   10,
            7,    6,    5,    1,    2,    2,    0,    2,    0,    2,
            0,    2,    1,    3,    1,    4,    1,    4,    1,    4,
            1,    3,    3,    3,    4,    4,    5,    0,    2,    4,
            3,    1,    1,    1,    4,    0,    2,    3,    0,    2,
            4,    0,    2,    0,    3,    1,    2,    1,    1,    0,
            1,    3,    4,    6,    1,    1,    1,    0,    1,    0,
            2,    2,    3,    3,    1,    3,    1,    2,    2,    3,
            1,    1,    3,    1,    1,    3,    2,    0,    3,    3,
            9,    3,    1,    3,    0,    2,    4,    5,    4,    4,
            4,    3,    1,    1,    1,    3,    1,    1,    0,    1,
            1,    2,    1,    1,    1,    1,    1,    1,    1,    3,
            1,    3,    3,    1,    0,    1,    1,    3,    3,    4,
            4,    1,    2,    3,    3,    3,    3,    3,    3,    3,
            3,    3,    3,    3,    3,    2,    2,    2,    2,    3,
            3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
            3,    3,    3,    3,    3,    3,    2,    2,    2,    2,
            3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
            1,    5,    4,    3,    4,    4,    2,    2,    2,    2,
            2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
            1,    3,    2,    1,    2,   10,   11,    3,    3,    2,
            4,    7,    3,    2,    0,    4,    1,    3,    2,    2,
            2,    4,    1,    1,    1,    2,    3,    1,    1,    1,
            1,    0,    2,    1,    0,    1,    1,    0,    1,    1,
            3,    4,    3,    1,    1,    1,    1,    1,    1,    1,
            1,    1,    1,    1,    1,    1,    3,    2,    3,    3,
            0,    1,    0,    1,    1,    3,    1,    1,    3,    1,
            1,    4,    4,    4,    1,    4,    1,    1,    3,    1,
            4,    2,    3,    1,    4,    4,    3,    3,    3,    1,
            3,    1,    1,    3,    1,    4,    3,    1,    1,    1,
            0,    0,    2,    3,    1,    3,    1,    4,    2,    2,
            2,    1,    2,    1,    4,    3,    3,    3,    6,    3,
            1,    1,    1
    );

    protected function reduceRule0() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule1() {
         $this->semValue = $this->handleNamespaces($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule2() {
         if (is_array($this->semStack[$this->stackPos-(2-2)])) { $this->semValue = array_merge($this->semStack[$this->stackPos-(2-1)], $this->semStack[$this->stackPos-(2-2)]); } else { $this->semStack[$this->stackPos-(2-1)][] = $this->semStack[$this->stackPos-(2-2)]; $this->semValue = $this->semStack[$this->stackPos-(2-1)]; };
    }

    protected function reduceRule3() {
         $this->semValue = array();
    }

    protected function reduceRule4() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule5() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule6() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule7() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule8() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule9() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule10() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule11() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule12() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule13() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule14() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule15() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule16() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule17() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule18() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule19() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule20() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule21() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule22() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule23() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule24() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule25() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule26() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule27() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule28() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule29() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule30() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule31() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule32() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule33() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule34() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule35() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule36() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule37() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule38() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule39() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule40() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule41() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule42() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule43() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule44() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule45() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule46() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule47() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule48() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule49() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule50() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule51() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule52() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule53() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule54() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule55() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule56() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule57() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule58() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule59() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule60() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule61() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule62() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule63() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule64() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule65() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule66() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule67() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule68() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule69() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule70() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule71() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule72() {
         $this->semValue = array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule73() {
         $this->semStack[$this->stackPos-(3-1)][] = $this->semStack[$this->stackPos-(3-3)]; $this->semValue = $this->semStack[$this->stackPos-(3-1)];
    }

    protected function reduceRule74() {
         $this->semValue = new Name($this->semStack[$this->stackPos-(1-1)], $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule75() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule76() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule77() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule78() {
         $this->semValue = new Stmt\HaltCompiler($this->lexer->handleHaltCompiler(), $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule79() {
         $this->semValue = new Stmt\Namespace_($this->semStack[$this->stackPos-(3-2)], null, $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule80() {
         $this->semValue = new Stmt\Namespace_($this->semStack[$this->stackPos-(5-2)], $this->semStack[$this->stackPos-(5-4)], $this->startAttributeStack[$this->stackPos-(5-1)] + $this->endAttributes);
    }

    protected function reduceRule81() {
         $this->semValue = new Stmt\Namespace_(null, $this->semStack[$this->stackPos-(4-3)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule82() {
         $this->semValue = new Stmt\Use_($this->semStack[$this->stackPos-(3-2)], Stmt\Use_::TYPE_NORMAL, $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule83() {
         $this->semValue = new Stmt\Use_($this->semStack[$this->stackPos-(4-3)], $this->semStack[$this->stackPos-(4-2)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule84() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule85() {
         $this->semValue = new Stmt\Const_($this->semStack[$this->stackPos-(3-2)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule86() {
         $this->semValue = Stmt\Use_::TYPE_FUNCTION;
    }

    protected function reduceRule87() {
         $this->semValue = Stmt\Use_::TYPE_CONSTANT;
    }

    protected function reduceRule88() {
         $this->semValue = new Stmt\GroupUse(new Name($this->semStack[$this->stackPos-(7-3)], $this->startAttributeStack[$this->stackPos-(7-1)] + $this->endAttributes), $this->semStack[$this->stackPos-(7-6)], $this->semStack[$this->stackPos-(7-2)], $this->startAttributeStack[$this->stackPos-(7-1)] + $this->endAttributes);
    }

    protected function reduceRule89() {
         $this->semValue = new Stmt\GroupUse(new Name($this->semStack[$this->stackPos-(6-2)], $this->startAttributeStack[$this->stackPos-(6-1)] + $this->endAttributes), $this->semStack[$this->stackPos-(6-5)], Stmt\Use_::TYPE_UNKNOWN, $this->startAttributeStack[$this->stackPos-(6-1)] + $this->endAttributes);
    }

    protected function reduceRule90() {
         $this->semStack[$this->stackPos-(3-1)][] = $this->semStack[$this->stackPos-(3-3)]; $this->semValue = $this->semStack[$this->stackPos-(3-1)];
    }

    protected function reduceRule91() {
         $this->semValue = array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule92() {
         $this->semValue = new Stmt\UseUse($this->semStack[$this->stackPos-(1-1)], null, Stmt\Use_::TYPE_UNKNOWN, $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule93() {
         $this->semValue = new Stmt\UseUse($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], Stmt\Use_::TYPE_UNKNOWN, $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule94() {
         $this->semValue = new Stmt\UseUse($this->semStack[$this->stackPos-(2-2)], null, Stmt\Use_::TYPE_UNKNOWN, $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule95() {
         $this->semValue = new Stmt\UseUse($this->semStack[$this->stackPos-(4-2)], $this->semStack[$this->stackPos-(4-4)], Stmt\Use_::TYPE_UNKNOWN, $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule96() {
         $this->semStack[$this->stackPos-(3-1)][] = $this->semStack[$this->stackPos-(3-3)]; $this->semValue = $this->semStack[$this->stackPos-(3-1)];
    }

    protected function reduceRule97() {
         $this->semValue = array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule98() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)]; $this->semValue->type = Stmt\Use_::TYPE_NORMAL;
    }

    protected function reduceRule99() {
         $this->semValue = $this->semStack[$this->stackPos-(2-2)]; $this->semValue->type = $this->semStack[$this->stackPos-(2-1)];
    }

    protected function reduceRule100() {
         $this->semStack[$this->stackPos-(3-1)][] = $this->semStack[$this->stackPos-(3-3)]; $this->semValue = $this->semStack[$this->stackPos-(3-1)];
    }

    protected function reduceRule101() {
         $this->semValue = array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule102() {
         $this->semValue = new Node\Const_($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule103() {
         $this->semStack[$this->stackPos-(3-1)][] = $this->semStack[$this->stackPos-(3-3)]; $this->semValue = $this->semStack[$this->stackPos-(3-1)];
    }

    protected function reduceRule104() {
         $this->semValue = array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule105() {
         $this->semValue = new Node\Const_($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule106() {
         if (is_array($this->semStack[$this->stackPos-(2-2)])) { $this->semValue = array_merge($this->semStack[$this->stackPos-(2-1)], $this->semStack[$this->stackPos-(2-2)]); } else { $this->semStack[$this->stackPos-(2-1)][] = $this->semStack[$this->stackPos-(2-2)]; $this->semValue = $this->semStack[$this->stackPos-(2-1)]; };
    }

    protected function reduceRule107() {
         $this->semValue = array();
    }

    protected function reduceRule108() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule109() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule110() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule111() {
         throw new Error('__HALT_COMPILER() can only be used from the outermost scope', $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule112() {
         $this->semValue = $this->semStack[$this->stackPos-(3-2)];
    }

    protected function reduceRule113() {
         $this->semValue = new Stmt\If_($this->semStack[$this->stackPos-(5-2)], ['stmts' => is_array($this->semStack[$this->stackPos-(5-3)]) ? $this->semStack[$this->stackPos-(5-3)] : array($this->semStack[$this->stackPos-(5-3)]), 'elseifs' => $this->semStack[$this->stackPos-(5-4)], 'else' => $this->semStack[$this->stackPos-(5-5)]], $this->startAttributeStack[$this->stackPos-(5-1)] + $this->endAttributes);
    }

    protected function reduceRule114() {
         $this->semValue = new Stmt\If_($this->semStack[$this->stackPos-(8-2)], ['stmts' => $this->semStack[$this->stackPos-(8-4)], 'elseifs' => $this->semStack[$this->stackPos-(8-5)], 'else' => $this->semStack[$this->stackPos-(8-6)]], $this->startAttributeStack[$this->stackPos-(8-1)] + $this->endAttributes);
    }

    protected function reduceRule115() {
         $this->semValue = new Stmt\While_($this->semStack[$this->stackPos-(3-2)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule116() {
         $this->semValue = new Stmt\Do_($this->semStack[$this->stackPos-(5-4)], is_array($this->semStack[$this->stackPos-(5-2)]) ? $this->semStack[$this->stackPos-(5-2)] : array($this->semStack[$this->stackPos-(5-2)]), $this->startAttributeStack[$this->stackPos-(5-1)] + $this->endAttributes);
    }

    protected function reduceRule117() {
         $this->semValue = new Stmt\For_(['init' => $this->semStack[$this->stackPos-(9-3)], 'cond' => $this->semStack[$this->stackPos-(9-5)], 'loop' => $this->semStack[$this->stackPos-(9-7)], 'stmts' => $this->semStack[$this->stackPos-(9-9)]], $this->startAttributeStack[$this->stackPos-(9-1)] + $this->endAttributes);
    }

    protected function reduceRule118() {
         $this->semValue = new Stmt\Switch_($this->semStack[$this->stackPos-(3-2)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule119() {
         $this->semValue = new Stmt\Break_($this->semStack[$this->stackPos-(3-2)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule120() {
         $this->semValue = new Stmt\Continue_($this->semStack[$this->stackPos-(3-2)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule121() {
         $this->semValue = new Stmt\Return_($this->semStack[$this->stackPos-(3-2)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule122() {
         $this->semValue = $this->semStack[$this->stackPos-(2-1)];
    }

    protected function reduceRule123() {
         $this->semValue = new Stmt\Global_($this->semStack[$this->stackPos-(3-2)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule124() {
         $this->semValue = new Stmt\Static_($this->semStack[$this->stackPos-(3-2)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule125() {
         $this->semValue = new Stmt\Echo_($this->semStack[$this->stackPos-(3-2)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule126() {
         $this->semValue = new Stmt\InlineHTML($this->semStack[$this->stackPos-(1-1)], $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule127() {
         $this->semValue = $this->semStack[$this->stackPos-(2-1)];
    }

    protected function reduceRule128() {
         $this->semValue = new Stmt\Unset_($this->semStack[$this->stackPos-(5-3)], $this->startAttributeStack[$this->stackPos-(5-1)] + $this->endAttributes);
    }

    protected function reduceRule129() {
         $this->semValue = new Stmt\Foreach_($this->semStack[$this->stackPos-(7-3)], $this->semStack[$this->stackPos-(7-5)][0], ['keyVar' => null, 'byRef' => $this->semStack[$this->stackPos-(7-5)][1], 'stmts' => $this->semStack[$this->stackPos-(7-7)]], $this->startAttributeStack[$this->stackPos-(7-1)] + $this->endAttributes);
    }

    protected function reduceRule130() {
         $this->semValue = new Stmt\Foreach_($this->semStack[$this->stackPos-(9-3)], $this->semStack[$this->stackPos-(9-7)][0], ['keyVar' => $this->semStack[$this->stackPos-(9-5)], 'byRef' => $this->semStack[$this->stackPos-(9-7)][1], 'stmts' => $this->semStack[$this->stackPos-(9-9)]], $this->startAttributeStack[$this->stackPos-(9-1)] + $this->endAttributes);
    }

    protected function reduceRule131() {
         $this->semValue = new Stmt\Declare_($this->semStack[$this->stackPos-(5-3)], $this->semStack[$this->stackPos-(5-5)], $this->startAttributeStack[$this->stackPos-(5-1)] + $this->endAttributes);
    }

    protected function reduceRule132() {
         $this->semValue = array(); /* means: no statement */
    }

    protected function reduceRule133() {
         $this->semValue = new Stmt\TryCatch($this->semStack[$this->stackPos-(6-3)], $this->semStack[$this->stackPos-(6-5)], $this->semStack[$this->stackPos-(6-6)], $this->startAttributeStack[$this->stackPos-(6-1)] + $this->endAttributes);
    }

    protected function reduceRule134() {
         $this->semValue = new Stmt\Throw_($this->semStack[$this->stackPos-(3-2)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule135() {
         $this->semValue = new Stmt\Goto_($this->semStack[$this->stackPos-(3-2)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule136() {
         $this->semValue = new Stmt\Label($this->semStack[$this->stackPos-(2-1)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule137() {
         $this->semValue = array(); /* means: no statement */
    }

    protected function reduceRule138() {
         $this->semValue = array();
    }

    protected function reduceRule139() {
         $this->semStack[$this->stackPos-(2-1)][] = $this->semStack[$this->stackPos-(2-2)]; $this->semValue = $this->semStack[$this->stackPos-(2-1)];
    }

    protected function reduceRule140() {
         $this->semValue = new Stmt\Catch_($this->semStack[$this->stackPos-(8-3)], substr($this->semStack[$this->stackPos-(8-4)], 1), $this->semStack[$this->stackPos-(8-7)], $this->startAttributeStack[$this->stackPos-(8-1)] + $this->endAttributes);
    }

    protected function reduceRule141() {
         $this->semValue = null;
    }

    protected function reduceRule142() {
         $this->semValue = $this->semStack[$this->stackPos-(4-3)];
    }

    protected function reduceRule143() {
         $this->semValue = array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule144() {
         $this->semStack[$this->stackPos-(3-1)][] = $this->semStack[$this->stackPos-(3-3)]; $this->semValue = $this->semStack[$this->stackPos-(3-1)];
    }

    protected function reduceRule145() {
         $this->semValue = false;
    }

    protected function reduceRule146() {
         $this->semValue = true;
    }

    protected function reduceRule147() {
         $this->semValue = false;
    }

    protected function reduceRule148() {
         $this->semValue = true;
    }

    protected function reduceRule149() {
         $this->semValue = new Stmt\Function_($this->semStack[$this->stackPos-(10-3)], ['byRef' => $this->semStack[$this->stackPos-(10-2)], 'params' => $this->semStack[$this->stackPos-(10-5)], 'returnType' => $this->semStack[$this->stackPos-(10-7)], 'stmts' => $this->semStack[$this->stackPos-(10-9)]], $this->startAttributeStack[$this->stackPos-(10-1)] + $this->endAttributes);
    }

    protected function reduceRule150() {
         $this->semValue = new Stmt\Class_($this->semStack[$this->stackPos-(7-2)], ['type' => $this->semStack[$this->stackPos-(7-1)], 'extends' => $this->semStack[$this->stackPos-(7-3)], 'implements' => $this->semStack[$this->stackPos-(7-4)], 'stmts' => $this->semStack[$this->stackPos-(7-6)]], $this->startAttributeStack[$this->stackPos-(7-1)] + $this->endAttributes);
    }

    protected function reduceRule151() {
         $this->semValue = new Stmt\Interface_($this->semStack[$this->stackPos-(6-2)], ['extends' => $this->semStack[$this->stackPos-(6-3)], 'stmts' => $this->semStack[$this->stackPos-(6-5)]], $this->startAttributeStack[$this->stackPos-(6-1)] + $this->endAttributes);
    }

    protected function reduceRule152() {
         $this->semValue = new Stmt\Trait_($this->semStack[$this->stackPos-(5-2)], $this->semStack[$this->stackPos-(5-4)], $this->startAttributeStack[$this->stackPos-(5-1)] + $this->endAttributes);
    }

    protected function reduceRule153() {
         $this->semValue = 0;
    }

    protected function reduceRule154() {
         $this->semValue = Stmt\Class_::MODIFIER_ABSTRACT;
    }

    protected function reduceRule155() {
         $this->semValue = Stmt\Class_::MODIFIER_FINAL;
    }

    protected function reduceRule156() {
         $this->semValue = null;
    }

    protected function reduceRule157() {
         $this->semValue = $this->semStack[$this->stackPos-(2-2)];
    }

    protected function reduceRule158() {
         $this->semValue = array();
    }

    protected function reduceRule159() {
         $this->semValue = $this->semStack[$this->stackPos-(2-2)];
    }

    protected function reduceRule160() {
         $this->semValue = array();
    }

    protected function reduceRule161() {
         $this->semValue = $this->semStack[$this->stackPos-(2-2)];
    }

    protected function reduceRule162() {
         $this->semValue = array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule163() {
         $this->semStack[$this->stackPos-(3-1)][] = $this->semStack[$this->stackPos-(3-3)]; $this->semValue = $this->semStack[$this->stackPos-(3-1)];
    }

    protected function reduceRule164() {
         $this->semValue = is_array($this->semStack[$this->stackPos-(1-1)]) ? $this->semStack[$this->stackPos-(1-1)] : array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule165() {
         $this->semValue = $this->semStack[$this->stackPos-(4-2)];
    }

    protected function reduceRule166() {
         $this->semValue = is_array($this->semStack[$this->stackPos-(1-1)]) ? $this->semStack[$this->stackPos-(1-1)] : array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule167() {
         $this->semValue = $this->semStack[$this->stackPos-(4-2)];
    }

    protected function reduceRule168() {
         $this->semValue = is_array($this->semStack[$this->stackPos-(1-1)]) ? $this->semStack[$this->stackPos-(1-1)] : array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule169() {
         $this->semValue = $this->semStack[$this->stackPos-(4-2)];
    }

    protected function reduceRule170() {
         $this->semValue = array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule171() {
         $this->semStack[$this->stackPos-(3-1)][] = $this->semStack[$this->stackPos-(3-3)]; $this->semValue = $this->semStack[$this->stackPos-(3-1)];
    }

    protected function reduceRule172() {
         $this->semValue = new Stmt\DeclareDeclare($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule173() {
         $this->semValue = $this->semStack[$this->stackPos-(3-2)];
    }

    protected function reduceRule174() {
         $this->semValue = $this->semStack[$this->stackPos-(4-3)];
    }

    protected function reduceRule175() {
         $this->semValue = $this->semStack[$this->stackPos-(4-2)];
    }

    protected function reduceRule176() {
         $this->semValue = $this->semStack[$this->stackPos-(5-3)];
    }

    protected function reduceRule177() {
         $this->semValue = array();
    }

    protected function reduceRule178() {
         $this->semStack[$this->stackPos-(2-1)][] = $this->semStack[$this->stackPos-(2-2)]; $this->semValue = $this->semStack[$this->stackPos-(2-1)];
    }

    protected function reduceRule179() {
         $this->semValue = new Stmt\Case_($this->semStack[$this->stackPos-(4-2)], $this->semStack[$this->stackPos-(4-4)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule180() {
         $this->semValue = new Stmt\Case_(null, $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule181() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule182() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule183() {
         $this->semValue = is_array($this->semStack[$this->stackPos-(1-1)]) ? $this->semStack[$this->stackPos-(1-1)] : array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule184() {
         $this->semValue = $this->semStack[$this->stackPos-(4-2)];
    }

    protected function reduceRule185() {
         $this->semValue = array();
    }

    protected function reduceRule186() {
         $this->semStack[$this->stackPos-(2-1)][] = $this->semStack[$this->stackPos-(2-2)]; $this->semValue = $this->semStack[$this->stackPos-(2-1)];
    }

    protected function reduceRule187() {
         $this->semValue = new Stmt\ElseIf_($this->semStack[$this->stackPos-(3-2)], is_array($this->semStack[$this->stackPos-(3-3)]) ? $this->semStack[$this->stackPos-(3-3)] : array($this->semStack[$this->stackPos-(3-3)]), $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule188() {
         $this->semValue = array();
    }

    protected function reduceRule189() {
         $this->semStack[$this->stackPos-(2-1)][] = $this->semStack[$this->stackPos-(2-2)]; $this->semValue = $this->semStack[$this->stackPos-(2-1)];
    }

    protected function reduceRule190() {
         $this->semValue = new Stmt\ElseIf_($this->semStack[$this->stackPos-(4-2)], $this->semStack[$this->stackPos-(4-4)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule191() {
         $this->semValue = null;
    }

    protected function reduceRule192() {
         $this->semValue = new Stmt\Else_(is_array($this->semStack[$this->stackPos-(2-2)]) ? $this->semStack[$this->stackPos-(2-2)] : array($this->semStack[$this->stackPos-(2-2)]), $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule193() {
         $this->semValue = null;
    }

    protected function reduceRule194() {
         $this->semValue = new Stmt\Else_($this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule195() {
         $this->semValue = array($this->semStack[$this->stackPos-(1-1)], false);
    }

    protected function reduceRule196() {
         $this->semValue = array($this->semStack[$this->stackPos-(2-2)], true);
    }

    protected function reduceRule197() {
         $this->semValue = array($this->semStack[$this->stackPos-(1-1)], false);
    }

    protected function reduceRule198() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule199() {
         $this->semValue = array();
    }

    protected function reduceRule200() {
         $this->semValue = array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule201() {
         $this->semStack[$this->stackPos-(3-1)][] = $this->semStack[$this->stackPos-(3-3)]; $this->semValue = $this->semStack[$this->stackPos-(3-1)];
    }

    protected function reduceRule202() {
         $this->semValue = new Node\Param(substr($this->semStack[$this->stackPos-(4-4)], 1), null, $this->semStack[$this->stackPos-(4-1)], $this->semStack[$this->stackPos-(4-2)], $this->semStack[$this->stackPos-(4-3)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule203() {
         $this->semValue = new Node\Param(substr($this->semStack[$this->stackPos-(6-4)], 1), $this->semStack[$this->stackPos-(6-6)], $this->semStack[$this->stackPos-(6-1)], $this->semStack[$this->stackPos-(6-2)], $this->semStack[$this->stackPos-(6-3)], $this->startAttributeStack[$this->stackPos-(6-1)] + $this->endAttributes);
    }

    protected function reduceRule204() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule205() {
         $this->semValue = 'array';
    }

    protected function reduceRule206() {
         $this->semValue = 'callable';
    }

    protected function reduceRule207() {
         $this->semValue = null;
    }

    protected function reduceRule208() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule209() {
         $this->semValue = null;
    }

    protected function reduceRule210() {
         $this->semValue = $this->semStack[$this->stackPos-(2-2)];
    }

    protected function reduceRule211() {
         $this->semValue = array();
    }

    protected function reduceRule212() {
         $this->semValue = $this->semStack[$this->stackPos-(3-2)];
    }

    protected function reduceRule213() {
         $this->semValue = array(new Node\Arg($this->semStack[$this->stackPos-(3-2)], false, false, $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes));
    }

    protected function reduceRule214() {
         $this->semValue = array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule215() {
         $this->semStack[$this->stackPos-(3-1)][] = $this->semStack[$this->stackPos-(3-3)]; $this->semValue = $this->semStack[$this->stackPos-(3-1)];
    }

    protected function reduceRule216() {
         $this->semValue = new Node\Arg($this->semStack[$this->stackPos-(1-1)], false, false, $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule217() {
         $this->semValue = new Node\Arg($this->semStack[$this->stackPos-(2-2)], true, false, $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule218() {
         $this->semValue = new Node\Arg($this->semStack[$this->stackPos-(2-2)], false, true, $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule219() {
         $this->semStack[$this->stackPos-(3-1)][] = $this->semStack[$this->stackPos-(3-3)]; $this->semValue = $this->semStack[$this->stackPos-(3-1)];
    }

    protected function reduceRule220() {
         $this->semValue = array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule221() {
         $this->semValue = new Expr\Variable($this->semStack[$this->stackPos-(1-1)], $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule222() {
         $this->semStack[$this->stackPos-(3-1)][] = $this->semStack[$this->stackPos-(3-3)]; $this->semValue = $this->semStack[$this->stackPos-(3-1)];
    }

    protected function reduceRule223() {
         $this->semValue = array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule224() {
         $this->semValue = new Stmt\StaticVar(substr($this->semStack[$this->stackPos-(1-1)], 1), null, $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule225() {
         $this->semValue = new Stmt\StaticVar(substr($this->semStack[$this->stackPos-(3-1)], 1), $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule226() {
         $this->semStack[$this->stackPos-(2-1)][] = $this->semStack[$this->stackPos-(2-2)]; $this->semValue = $this->semStack[$this->stackPos-(2-1)];
    }

    protected function reduceRule227() {
         $this->semValue = array();
    }

    protected function reduceRule228() {
         $this->semValue = new Stmt\Property($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-2)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule229() {
         $this->semValue = new Stmt\ClassConst($this->semStack[$this->stackPos-(3-2)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule230() {
         $this->semValue = new Stmt\ClassMethod($this->semStack[$this->stackPos-(9-4)], ['type' => $this->semStack[$this->stackPos-(9-1)], 'byRef' => $this->semStack[$this->stackPos-(9-3)], 'params' => $this->semStack[$this->stackPos-(9-6)], 'returnType' => $this->semStack[$this->stackPos-(9-8)], 'stmts' => $this->semStack[$this->stackPos-(9-9)]], $this->startAttributeStack[$this->stackPos-(9-1)] + $this->endAttributes);
    }

    protected function reduceRule231() {
         $this->semValue = new Stmt\TraitUse($this->semStack[$this->stackPos-(3-2)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule232() {
         $this->semValue = array();
    }

    protected function reduceRule233() {
         $this->semValue = $this->semStack[$this->stackPos-(3-2)];
    }

    protected function reduceRule234() {
         $this->semValue = array();
    }

    protected function reduceRule235() {
         $this->semStack[$this->stackPos-(2-1)][] = $this->semStack[$this->stackPos-(2-2)]; $this->semValue = $this->semStack[$this->stackPos-(2-1)];
    }

    protected function reduceRule236() {
         $this->semValue = new Stmt\TraitUseAdaptation\Precedence($this->semStack[$this->stackPos-(4-1)][0], $this->semStack[$this->stackPos-(4-1)][1], $this->semStack[$this->stackPos-(4-3)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule237() {
         $this->semValue = new Stmt\TraitUseAdaptation\Alias($this->semStack[$this->stackPos-(5-1)][0], $this->semStack[$this->stackPos-(5-1)][1], $this->semStack[$this->stackPos-(5-3)], $this->semStack[$this->stackPos-(5-4)], $this->startAttributeStack[$this->stackPos-(5-1)] + $this->endAttributes);
    }

    protected function reduceRule238() {
         $this->semValue = new Stmt\TraitUseAdaptation\Alias($this->semStack[$this->stackPos-(4-1)][0], $this->semStack[$this->stackPos-(4-1)][1], $this->semStack[$this->stackPos-(4-3)], null, $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule239() {
         $this->semValue = new Stmt\TraitUseAdaptation\Alias($this->semStack[$this->stackPos-(4-1)][0], $this->semStack[$this->stackPos-(4-1)][1], null, $this->semStack[$this->stackPos-(4-3)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule240() {
         $this->semValue = new Stmt\TraitUseAdaptation\Alias($this->semStack[$this->stackPos-(4-1)][0], $this->semStack[$this->stackPos-(4-1)][1], null, $this->semStack[$this->stackPos-(4-3)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule241() {
         $this->semValue = array($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)]);
    }

    protected function reduceRule242() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule243() {
         $this->semValue = array(null, $this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule244() {
         $this->semValue = null;
    }

    protected function reduceRule245() {
         $this->semValue = $this->semStack[$this->stackPos-(3-2)];
    }

    protected function reduceRule246() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule247() {
         $this->semValue = 0;
    }

    protected function reduceRule248() {
         $this->semValue = 0;
    }

    protected function reduceRule249() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule250() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule251() {
         Stmt\Class_::verifyModifier($this->semStack[$this->stackPos-(2-1)], $this->semStack[$this->stackPos-(2-2)]); $this->semValue = $this->semStack[$this->stackPos-(2-1)] | $this->semStack[$this->stackPos-(2-2)];
    }

    protected function reduceRule252() {
         $this->semValue = Stmt\Class_::MODIFIER_PUBLIC;
    }

    protected function reduceRule253() {
         $this->semValue = Stmt\Class_::MODIFIER_PROTECTED;
    }

    protected function reduceRule254() {
         $this->semValue = Stmt\Class_::MODIFIER_PRIVATE;
    }

    protected function reduceRule255() {
         $this->semValue = Stmt\Class_::MODIFIER_STATIC;
    }

    protected function reduceRule256() {
         $this->semValue = Stmt\Class_::MODIFIER_ABSTRACT;
    }

    protected function reduceRule257() {
         $this->semValue = Stmt\Class_::MODIFIER_FINAL;
    }

    protected function reduceRule258() {
         $this->semValue = array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule259() {
         $this->semStack[$this->stackPos-(3-1)][] = $this->semStack[$this->stackPos-(3-3)]; $this->semValue = $this->semStack[$this->stackPos-(3-1)];
    }

    protected function reduceRule260() {
         $this->semValue = new Stmt\PropertyProperty(substr($this->semStack[$this->stackPos-(1-1)], 1), null, $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule261() {
         $this->semValue = new Stmt\PropertyProperty(substr($this->semStack[$this->stackPos-(3-1)], 1), $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule262() {
         $this->semStack[$this->stackPos-(3-1)][] = $this->semStack[$this->stackPos-(3-3)]; $this->semValue = $this->semStack[$this->stackPos-(3-1)];
    }

    protected function reduceRule263() {
         $this->semValue = array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule264() {
         $this->semValue = array();
    }

    protected function reduceRule265() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule266() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule267() {
         $this->semValue = new Expr\Assign($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule268() {
         $this->semValue = new Expr\Assign($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule269() {
         $this->semValue = new Expr\AssignRef($this->semStack[$this->stackPos-(4-1)], $this->semStack[$this->stackPos-(4-4)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule270() {
         $this->semValue = new Expr\AssignRef($this->semStack[$this->stackPos-(4-1)], $this->semStack[$this->stackPos-(4-4)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule271() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule272() {
         $this->semValue = new Expr\Clone_($this->semStack[$this->stackPos-(2-2)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule273() {
         $this->semValue = new Expr\AssignOp\Plus($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule274() {
         $this->semValue = new Expr\AssignOp\Minus($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule275() {
         $this->semValue = new Expr\AssignOp\Mul($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule276() {
         $this->semValue = new Expr\AssignOp\Div($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule277() {
         $this->semValue = new Expr\AssignOp\Concat($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule278() {
         $this->semValue = new Expr\AssignOp\Mod($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule279() {
         $this->semValue = new Expr\AssignOp\BitwiseAnd($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule280() {
         $this->semValue = new Expr\AssignOp\BitwiseOr($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule281() {
         $this->semValue = new Expr\AssignOp\BitwiseXor($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule282() {
         $this->semValue = new Expr\AssignOp\ShiftLeft($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule283() {
         $this->semValue = new Expr\AssignOp\ShiftRight($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule284() {
         $this->semValue = new Expr\AssignOp\Pow($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule285() {
         $this->semValue = new Expr\PostInc($this->semStack[$this->stackPos-(2-1)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule286() {
         $this->semValue = new Expr\PreInc($this->semStack[$this->stackPos-(2-2)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule287() {
         $this->semValue = new Expr\PostDec($this->semStack[$this->stackPos-(2-1)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule288() {
         $this->semValue = new Expr\PreDec($this->semStack[$this->stackPos-(2-2)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule289() {
         $this->semValue = new Expr\BinaryOp\BooleanOr($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule290() {
         $this->semValue = new Expr\BinaryOp\BooleanAnd($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule291() {
         $this->semValue = new Expr\BinaryOp\LogicalOr($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule292() {
         $this->semValue = new Expr\BinaryOp\LogicalAnd($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule293() {
         $this->semValue = new Expr\BinaryOp\LogicalXor($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule294() {
         $this->semValue = new Expr\BinaryOp\BitwiseOr($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule295() {
         $this->semValue = new Expr\BinaryOp\BitwiseAnd($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule296() {
         $this->semValue = new Expr\BinaryOp\BitwiseXor($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule297() {
         $this->semValue = new Expr\BinaryOp\Concat($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule298() {
         $this->semValue = new Expr\BinaryOp\Plus($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule299() {
         $this->semValue = new Expr\BinaryOp\Minus($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule300() {
         $this->semValue = new Expr\BinaryOp\Mul($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule301() {
         $this->semValue = new Expr\BinaryOp\Div($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule302() {
         $this->semValue = new Expr\BinaryOp\Mod($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule303() {
         $this->semValue = new Expr\BinaryOp\ShiftLeft($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule304() {
         $this->semValue = new Expr\BinaryOp\ShiftRight($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule305() {
         $this->semValue = new Expr\BinaryOp\Pow($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule306() {
         $this->semValue = new Expr\UnaryPlus($this->semStack[$this->stackPos-(2-2)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule307() {
         $this->semValue = new Expr\UnaryMinus($this->semStack[$this->stackPos-(2-2)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule308() {
         $this->semValue = new Expr\BooleanNot($this->semStack[$this->stackPos-(2-2)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule309() {
         $this->semValue = new Expr\BitwiseNot($this->semStack[$this->stackPos-(2-2)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule310() {
         $this->semValue = new Expr\BinaryOp\Identical($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule311() {
         $this->semValue = new Expr\BinaryOp\NotIdentical($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule312() {
         $this->semValue = new Expr\BinaryOp\Equal($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule313() {
         $this->semValue = new Expr\BinaryOp\NotEqual($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule314() {
         $this->semValue = new Expr\BinaryOp\Spaceship($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule315() {
         $this->semValue = new Expr\BinaryOp\Smaller($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule316() {
         $this->semValue = new Expr\BinaryOp\SmallerOrEqual($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule317() {
         $this->semValue = new Expr\BinaryOp\Greater($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule318() {
         $this->semValue = new Expr\BinaryOp\GreaterOrEqual($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule319() {
         $this->semValue = new Expr\Instanceof_($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule320() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule321() {
         $this->semValue = new Expr\Ternary($this->semStack[$this->stackPos-(5-1)], $this->semStack[$this->stackPos-(5-3)], $this->semStack[$this->stackPos-(5-5)], $this->startAttributeStack[$this->stackPos-(5-1)] + $this->endAttributes);
    }

    protected function reduceRule322() {
         $this->semValue = new Expr\Ternary($this->semStack[$this->stackPos-(4-1)], null, $this->semStack[$this->stackPos-(4-4)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule323() {
         $this->semValue = new Expr\BinaryOp\Coalesce($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule324() {
         $this->semValue = new Expr\Isset_($this->semStack[$this->stackPos-(4-3)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule325() {
         $this->semValue = new Expr\Empty_($this->semStack[$this->stackPos-(4-3)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule326() {
         $this->semValue = new Expr\Include_($this->semStack[$this->stackPos-(2-2)], Expr\Include_::TYPE_INCLUDE, $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule327() {
         $this->semValue = new Expr\Include_($this->semStack[$this->stackPos-(2-2)], Expr\Include_::TYPE_INCLUDE_ONCE, $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule328() {
         $this->semValue = new Expr\Eval_($this->semStack[$this->stackPos-(2-2)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule329() {
         $this->semValue = new Expr\Include_($this->semStack[$this->stackPos-(2-2)], Expr\Include_::TYPE_REQUIRE, $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule330() {
         $this->semValue = new Expr\Include_($this->semStack[$this->stackPos-(2-2)], Expr\Include_::TYPE_REQUIRE_ONCE, $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule331() {
         $this->semValue = new Expr\Cast\Int_($this->semStack[$this->stackPos-(2-2)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule332() {
         $this->semValue = new Expr\Cast\Double($this->semStack[$this->stackPos-(2-2)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule333() {
         $this->semValue = new Expr\Cast\String_($this->semStack[$this->stackPos-(2-2)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule334() {
         $this->semValue = new Expr\Cast\Array_($this->semStack[$this->stackPos-(2-2)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule335() {
         $this->semValue = new Expr\Cast\Object_($this->semStack[$this->stackPos-(2-2)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule336() {
         $this->semValue = new Expr\Cast\Bool_($this->semStack[$this->stackPos-(2-2)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule337() {
         $this->semValue = new Expr\Cast\Unset_($this->semStack[$this->stackPos-(2-2)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule338() {
         $this->semValue = new Expr\Exit_($this->semStack[$this->stackPos-(2-2)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule339() {
         $this->semValue = new Expr\ErrorSuppress($this->semStack[$this->stackPos-(2-2)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule340() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule341() {
         $this->semValue = new Expr\ShellExec($this->semStack[$this->stackPos-(3-2)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule342() {
         $this->semValue = new Expr\Print_($this->semStack[$this->stackPos-(2-2)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule343() {
         $this->semValue = new Expr\Yield_(null, null, $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule344() {
         $this->semValue = new Expr\YieldFrom($this->semStack[$this->stackPos-(2-2)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule345() {
         $this->semValue = new Expr\Closure(['static' => false, 'byRef' => $this->semStack[$this->stackPos-(10-2)], 'params' => $this->semStack[$this->stackPos-(10-4)], 'uses' => $this->semStack[$this->stackPos-(10-6)], 'returnType' => $this->semStack[$this->stackPos-(10-7)], 'stmts' => $this->semStack[$this->stackPos-(10-9)]], $this->startAttributeStack[$this->stackPos-(10-1)] + $this->endAttributes);
    }

    protected function reduceRule346() {
         $this->semValue = new Expr\Closure(['static' => true, 'byRef' => $this->semStack[$this->stackPos-(11-3)], 'params' => $this->semStack[$this->stackPos-(11-5)], 'uses' => $this->semStack[$this->stackPos-(11-7)], 'returnType' => $this->semStack[$this->stackPos-(11-8)], 'stmts' => $this->semStack[$this->stackPos-(11-10)]], $this->startAttributeStack[$this->stackPos-(11-1)] + $this->endAttributes);
    }

    protected function reduceRule347() {
         $this->semValue = $this->semStack[$this->stackPos-(3-2)];
    }

    protected function reduceRule348() {
         $this->semValue = $this->semStack[$this->stackPos-(3-2)];
    }

    protected function reduceRule349() {
         $this->semValue = new Expr\Yield_($this->semStack[$this->stackPos-(2-2)], null, $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule350() {
         $this->semValue = new Expr\Yield_($this->semStack[$this->stackPos-(4-4)], $this->semStack[$this->stackPos-(4-2)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule351() {
         $this->semValue = array(new Stmt\Class_(null, ['type' => 0, 'extends' => $this->semStack[$this->stackPos-(7-3)], 'implements' => $this->semStack[$this->stackPos-(7-4)], 'stmts' => $this->semStack[$this->stackPos-(7-6)]], $this->startAttributeStack[$this->stackPos-(7-1)] + $this->endAttributes), $this->semStack[$this->stackPos-(7-2)]);
    }

    protected function reduceRule352() {
         $this->semValue = new Expr\New_($this->semStack[$this->stackPos-(3-2)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule353() {
         list($class, $ctorArgs) = $this->semStack[$this->stackPos-(2-2)]; $this->semValue = new Expr\New_($class, $ctorArgs, $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule354() {
         $this->semValue = array();
    }

    protected function reduceRule355() {
         $this->semValue = $this->semStack[$this->stackPos-(4-3)];
    }

    protected function reduceRule356() {
         $this->semValue = array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule357() {
         $this->semStack[$this->stackPos-(3-1)][] = $this->semStack[$this->stackPos-(3-3)]; $this->semValue = $this->semStack[$this->stackPos-(3-1)];
    }

    protected function reduceRule358() {
         $this->semValue = new Expr\ClosureUse(substr($this->semStack[$this->stackPos-(2-2)], 1), $this->semStack[$this->stackPos-(2-1)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule359() {
         $this->semValue = new Expr\FuncCall($this->semStack[$this->stackPos-(2-1)], $this->semStack[$this->stackPos-(2-2)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule360() {
         $this->semValue = new Expr\FuncCall($this->semStack[$this->stackPos-(2-1)], $this->semStack[$this->stackPos-(2-2)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule361() {
         $this->semValue = new Expr\StaticCall($this->semStack[$this->stackPos-(4-1)], $this->semStack[$this->stackPos-(4-3)], $this->semStack[$this->stackPos-(4-4)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule362() {
         $this->semValue = new Name($this->semStack[$this->stackPos-(1-1)], $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule363() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule364() {
         $this->semValue = new Name($this->semStack[$this->stackPos-(1-1)], $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule365() {
         $this->semValue = new Name\FullyQualified($this->semStack[$this->stackPos-(2-2)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule366() {
         $this->semValue = new Name\Relative($this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule367() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule368() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule369() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule370() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule371() {
         $this->semValue = null;
    }

    protected function reduceRule372() {
         $this->semValue = null;
    }

    protected function reduceRule373() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule374() {
         $this->semValue = array();
    }

    protected function reduceRule375() {
         $this->semValue = array(Scalar\String_::parseEscapeSequences($this->semStack[$this->stackPos-(1-1)], '`'));
    }

    protected function reduceRule376() {
         foreach ($this->semStack[$this->stackPos-(1-1)] as &$s) { if (is_string($s)) { $s = Node\Scalar\String_::parseEscapeSequences($s, '`'); } }; $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule377() {
         $this->semValue = array();
    }

    protected function reduceRule378() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule379() {
         $this->semValue = new Expr\ConstFetch($this->semStack[$this->stackPos-(1-1)], $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule380() {
         $this->semValue = new Expr\ClassConstFetch($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule381() {
         $this->semValue = new Expr\Array_($this->semStack[$this->stackPos-(4-3)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule382() {
         $this->semValue = new Expr\Array_($this->semStack[$this->stackPos-(3-2)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule383() {
         $this->semValue = new Scalar\String_(Scalar\String_::parse($this->semStack[$this->stackPos-(1-1)]), $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule384() {
         $this->semValue = new Scalar\LNumber(Scalar\LNumber::parse($this->semStack[$this->stackPos-(1-1)]), $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule385() {
         $this->semValue = new Scalar\DNumber(Scalar\DNumber::parse($this->semStack[$this->stackPos-(1-1)]), $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule386() {
         $this->semValue = new Scalar\MagicConst\Line($this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule387() {
         $this->semValue = new Scalar\MagicConst\File($this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule388() {
         $this->semValue = new Scalar\MagicConst\Dir($this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule389() {
         $this->semValue = new Scalar\MagicConst\Class_($this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule390() {
         $this->semValue = new Scalar\MagicConst\Trait_($this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule391() {
         $this->semValue = new Scalar\MagicConst\Method($this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule392() {
         $this->semValue = new Scalar\MagicConst\Function_($this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule393() {
         $this->semValue = new Scalar\MagicConst\Namespace_($this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule394() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule395() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule396() {
         $this->semValue = new Scalar\String_(Scalar\String_::parseDocString($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-2)]), $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule397() {
         $this->semValue = new Scalar\String_('', $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule398() {
         foreach ($this->semStack[$this->stackPos-(3-2)] as &$s) { if (is_string($s)) { $s = Node\Scalar\String_::parseEscapeSequences($s, '"'); } }; $this->semValue = new Scalar\Encapsed($this->semStack[$this->stackPos-(3-2)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule399() {
         foreach ($this->semStack[$this->stackPos-(3-2)] as &$s) { if (is_string($s)) { $s = Node\Scalar\String_::parseEscapeSequences($s, null); } } $s = preg_replace('~(\r\n|\n|\r)$~', '', $s); if ('' === $s) array_pop($this->semStack[$this->stackPos-(3-2)]);; $this->semValue = new Scalar\Encapsed($this->semStack[$this->stackPos-(3-2)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule400() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule401() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule402() {
         $this->semValue = null;
    }

    protected function reduceRule403() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule404() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule405() {
         $this->semValue = $this->semStack[$this->stackPos-(3-2)];
    }

    protected function reduceRule406() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule407() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule408() {
         $this->semValue = $this->semStack[$this->stackPos-(3-2)];
    }

    protected function reduceRule409() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule410() {
         $this->semValue = new Expr\Variable($this->semStack[$this->stackPos-(1-1)], $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule411() {
         $this->semValue = new Expr\ArrayDimFetch($this->semStack[$this->stackPos-(4-1)], $this->semStack[$this->stackPos-(4-3)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule412() {
         $this->semValue = new Expr\ArrayDimFetch($this->semStack[$this->stackPos-(4-1)], $this->semStack[$this->stackPos-(4-3)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule413() {
         $this->semValue = new Expr\ArrayDimFetch($this->semStack[$this->stackPos-(4-1)], $this->semStack[$this->stackPos-(4-3)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule414() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule415() {
         $this->semValue = new Expr\MethodCall($this->semStack[$this->stackPos-(4-1)], $this->semStack[$this->stackPos-(4-3)], $this->semStack[$this->stackPos-(4-4)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule416() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule417() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule418() {
         $this->semValue = new Expr\PropertyFetch($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule419() {
         $this->semValue = substr($this->semStack[$this->stackPos-(1-1)], 1);
    }

    protected function reduceRule420() {
         $this->semValue = $this->semStack[$this->stackPos-(4-3)];
    }

    protected function reduceRule421() {
         $this->semValue = new Expr\Variable($this->semStack[$this->stackPos-(2-2)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule422() {
         $this->semValue = new Expr\StaticPropertyFetch($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule423() {
         $this->semValue = new Expr\Variable($this->semStack[$this->stackPos-(1-1)], $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule424() {
         $this->semValue = new Expr\ArrayDimFetch($this->semStack[$this->stackPos-(4-1)], $this->semStack[$this->stackPos-(4-3)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule425() {
         $this->semValue = new Expr\ArrayDimFetch($this->semStack[$this->stackPos-(4-1)], $this->semStack[$this->stackPos-(4-3)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule426() {
         $this->semValue = new Expr\PropertyFetch($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule427() {
         $this->semValue = new Expr\StaticPropertyFetch($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule428() {
         $this->semValue = new Expr\StaticPropertyFetch($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule429() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule430() {
         $this->semValue = $this->semStack[$this->stackPos-(3-2)];
    }

    protected function reduceRule431() {
         $this->semValue = new Expr\Variable($this->semStack[$this->stackPos-(1-1)], $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule432() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule433() {
         $this->semValue = $this->semStack[$this->stackPos-(3-2)];
    }

    protected function reduceRule434() {
         $this->semValue = new Expr\Variable($this->semStack[$this->stackPos-(1-1)], $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule435() {
         $this->semValue = new Expr\List_($this->semStack[$this->stackPos-(4-3)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule436() {
         $this->semStack[$this->stackPos-(3-1)][] = $this->semStack[$this->stackPos-(3-3)]; $this->semValue = $this->semStack[$this->stackPos-(3-1)];
    }

    protected function reduceRule437() {
         $this->semValue = array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule438() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule439() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule440() {
         $this->semValue = null;
    }

    protected function reduceRule441() {
         $this->semValue = array();
    }

    protected function reduceRule442() {
         $this->semValue = $this->semStack[$this->stackPos-(2-1)];
    }

    protected function reduceRule443() {
         $this->semStack[$this->stackPos-(3-1)][] = $this->semStack[$this->stackPos-(3-3)]; $this->semValue = $this->semStack[$this->stackPos-(3-1)];
    }

    protected function reduceRule444() {
         $this->semValue = array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule445() {
         $this->semValue = new Expr\ArrayItem($this->semStack[$this->stackPos-(3-3)], $this->semStack[$this->stackPos-(3-1)], false, $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule446() {
         $this->semValue = new Expr\ArrayItem($this->semStack[$this->stackPos-(1-1)], null, false, $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule447() {
         $this->semValue = new Expr\ArrayItem($this->semStack[$this->stackPos-(4-4)], $this->semStack[$this->stackPos-(4-1)], true, $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule448() {
         $this->semValue = new Expr\ArrayItem($this->semStack[$this->stackPos-(2-2)], null, true, $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule449() {
         $this->semStack[$this->stackPos-(2-1)][] = $this->semStack[$this->stackPos-(2-2)]; $this->semValue = $this->semStack[$this->stackPos-(2-1)];
    }

    protected function reduceRule450() {
         $this->semStack[$this->stackPos-(2-1)][] = $this->semStack[$this->stackPos-(2-2)]; $this->semValue = $this->semStack[$this->stackPos-(2-1)];
    }

    protected function reduceRule451() {
         $this->semValue = array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule452() {
         $this->semValue = array($this->semStack[$this->stackPos-(2-1)], $this->semStack[$this->stackPos-(2-2)]);
    }

    protected function reduceRule453() {
         $this->semValue = new Expr\Variable(substr($this->semStack[$this->stackPos-(1-1)], 1), $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule454() {
         $this->semValue = new Expr\ArrayDimFetch(new Expr\Variable(substr($this->semStack[$this->stackPos-(4-1)], 1), $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes), $this->semStack[$this->stackPos-(4-3)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule455() {
         $this->semValue = new Expr\PropertyFetch(new Expr\Variable(substr($this->semStack[$this->stackPos-(3-1)], 1), $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes), $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule456() {
         $this->semValue = new Expr\Variable($this->semStack[$this->stackPos-(3-2)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule457() {
         $this->semValue = new Expr\Variable($this->semStack[$this->stackPos-(3-2)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule458() {
         $this->semValue = new Expr\ArrayDimFetch(new Expr\Variable($this->semStack[$this->stackPos-(6-2)], $this->startAttributeStack[$this->stackPos-(6-1)] + $this->endAttributes), $this->semStack[$this->stackPos-(6-4)], $this->startAttributeStack[$this->stackPos-(6-1)] + $this->endAttributes);
    }

    protected function reduceRule459() {
         $this->semValue = $this->semStack[$this->stackPos-(3-2)];
    }

    protected function reduceRule460() {
         $this->semValue = new Scalar\String_($this->semStack[$this->stackPos-(1-1)], $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule461() {
         $this->semValue = new Scalar\String_($this->semStack[$this->stackPos-(1-1)], $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule462() {
         $this->semValue = new Expr\Variable(substr($this->semStack[$this->stackPos-(1-1)], 1), $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }
}
